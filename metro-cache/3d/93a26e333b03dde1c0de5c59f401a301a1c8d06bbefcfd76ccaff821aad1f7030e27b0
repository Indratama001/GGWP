{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"./utils/invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./utils/invariant\"));\n\n  var StateUtils = {\n    get: function get(state, key) {\n      return state.routes.find(function (route) {\n        return route.key === key;\n      }) || null;\n    },\n    indexOf: function indexOf(state, key) {\n      return state.routes.map(function (route) {\n        return route.key;\n      }).indexOf(key);\n    },\n    has: function has(state, key) {\n      return !!state.routes.some(function (route) {\n        return route.key === key;\n      });\n    },\n    push: function push(state, route) {\n      (0, _invariant.default)(StateUtils.indexOf(state, route.key) === -1, 'should not push route with duplicated key %s', route.key);\n      var routes = state.routes.slice();\n      routes.push(route);\n      return (0, _objectSpread2.default)({}, state, {\n        index: routes.length - 1,\n        routes: routes\n      });\n    },\n    pop: function pop(state) {\n      if (state.index <= 0) {\n        return state;\n      }\n\n      var routes = state.routes.slice(0, -1);\n      return (0, _objectSpread2.default)({}, state, {\n        index: routes.length - 1,\n        routes: routes\n      });\n    },\n    jumpToIndex: function jumpToIndex(state, index) {\n      if (index === state.index) {\n        return state;\n      }\n\n      (0, _invariant.default)(!!state.routes[index], 'invalid index %s to jump to', index);\n      return (0, _objectSpread2.default)({}, state, {\n        index: index\n      });\n    },\n    jumpTo: function jumpTo(state, key) {\n      var index = StateUtils.indexOf(state, key);\n      return StateUtils.jumpToIndex(state, index);\n    },\n    back: function back(state) {\n      var index = state.index - 1;\n      var route = state.routes[index];\n      return route ? StateUtils.jumpToIndex(state, index) : state;\n    },\n    forward: function forward(state) {\n      var index = state.index + 1;\n      var route = state.routes[index];\n      return route ? StateUtils.jumpToIndex(state, index) : state;\n    },\n    replaceAt: function replaceAt(state, key, route) {\n      var index = StateUtils.indexOf(state, key);\n      return StateUtils.replaceAtIndex(state, index, route);\n    },\n    replaceAtIndex: function replaceAtIndex(state, index, route) {\n      (0, _invariant.default)(!!state.routes[index], 'invalid index %s for replacing route %s', index, route.key);\n\n      if (state.routes[index] === route) {\n        return state;\n      }\n\n      var routes = state.routes.slice();\n      routes[index] = route;\n      return (0, _objectSpread2.default)({}, state, {\n        index: index,\n        routes: routes\n      });\n    },\n    reset: function reset(state, routes, index) {\n      (0, _invariant.default)(routes.length && Array.isArray(routes), 'invalid routes to replace');\n      var nextIndex = index === undefined ? routes.length - 1 : index;\n\n      if (state.routes.length === routes.length && state.index === nextIndex) {\n        var compare = function compare(route, ii) {\n          return routes[ii] === route;\n        };\n\n        if (state.routes.every(compare)) {\n          return state;\n        }\n      }\n\n      (0, _invariant.default)(!!routes[nextIndex], 'invalid index %s to reset', nextIndex);\n      return (0, _objectSpread2.default)({}, state, {\n        index: nextIndex,\n        routes: routes\n      });\n    }\n  };\n  var _default = StateUtils;\n  exports.default = _default;\n});","map":[[11,0,1,0],[13,0,11,0],[13,6,11,6,"StateUtils"],[13,16,11,16],[13,19,11,19],[14,0,15,2,"get"],[14,4,15,2,"get"],[14,7,11,19],[14,22,15,6,"state"],[14,27,11,19],[14,29,15,13,"key"],[14,32,11,19],[14,34,15,18],[15,0,16,4],[15,13,16,11,"state"],[15,18,16,16],[15,19,16,17,"routes"],[15,25,16,11],[15,26,16,24,"find"],[15,30,16,11],[15,31,16,29],[15,41,16,29,"route"],[15,46,16,34],[16,0,16,34],[16,15,16,38,"route"],[16,20,16,43],[16,21,16,44,"key"],[16,24,16,38],[16,29,16,52,"key"],[16,32,16,34],[17,0,16,34],[17,7,16,11],[17,12,16,60],[17,16,16,4],[18,0,17,3],[18,5,11,19],[19,0,23,2,"indexOf"],[19,4,23,2,"indexOf"],[19,11,11,19],[19,30,23,10,"state"],[19,35,11,19],[19,37,23,17,"key"],[19,40,11,19],[19,42,23,22],[20,0,24,4],[20,13,24,11,"state"],[20,18,24,16],[20,19,24,17,"routes"],[20,25,24,11],[20,26,24,24,"map"],[20,29,24,11],[20,30,24,28],[20,40,24,28,"route"],[20,45,24,33],[21,0,24,33],[21,15,24,37,"route"],[21,20,24,42],[21,21,24,43,"key"],[21,24,24,33],[22,0,24,33],[22,7,24,11],[22,9,24,48,"indexOf"],[22,16,24,11],[22,17,24,56,"key"],[22,20,24,11],[22,21,24,4],[23,0,25,3],[23,5,11,19],[24,0,31,2,"has"],[24,4,31,2,"has"],[24,7,11,19],[24,22,31,6,"state"],[24,27,11,19],[24,29,31,13,"key"],[24,32,11,19],[24,34,31,18],[25,0,32,4],[25,13,32,11],[25,14,32,12],[25,15,32,13,"state"],[25,20,32,18],[25,21,32,19,"routes"],[25,27,32,13],[25,28,32,26,"some"],[25,32,32,13],[25,33,32,31],[25,43,32,31,"route"],[25,48,32,36],[26,0,32,36],[26,15,32,40,"route"],[26,20,32,45],[26,21,32,46,"key"],[26,24,32,40],[26,29,32,54,"key"],[26,32,32,36],[27,0,32,36],[27,7,32,13],[27,8,32,4],[28,0,33,3],[28,5,11,19],[29,0,40,2,"push"],[29,4,40,2,"push"],[29,8,11,19],[29,24,40,7,"state"],[29,29,11,19],[29,31,40,14,"route"],[29,36,11,19],[29,38,40,21],[30,0,41,4],[30,30,42,6,"StateUtils"],[30,40,42,16],[30,41,42,17,"indexOf"],[30,48,42,6],[30,49,42,25,"state"],[30,54,42,6],[30,56,42,32,"route"],[30,61,42,37],[30,62,42,38,"key"],[30,65,42,6],[30,71,42,47],[30,72,42,48],[30,73,41,4],[30,75,43,6],[30,121,41,4],[30,123,44,6,"route"],[30,128,44,11],[30,129,44,12,"key"],[30,132,41,4],[31,0,47,4],[31,10,47,10,"routes"],[31,16,47,16],[31,19,47,19,"state"],[31,24,47,24],[31,25,47,25,"routes"],[31,31,47,19],[31,32,47,32,"slice"],[31,37,47,19],[31,39,47,4],[32,0,48,4,"routes"],[32,6,48,4,"routes"],[32,12,48,10],[32,13,48,11,"push"],[32,17,48,4],[32,18,48,16,"route"],[32,23,48,4],[33,0,50,4],[33,45,51,9,"state"],[33,50,50,4],[34,0,52,6,"index"],[34,8,52,6,"index"],[34,13,52,11],[34,15,52,13,"routes"],[34,21,52,19],[34,22,52,20,"length"],[34,28,52,13],[34,31,52,29],[34,32,50,4],[35,0,53,6,"routes"],[35,8,53,6,"routes"],[35,14,53,12],[35,16,53,6,"routes"],[36,0,50,4],[37,0,55,3],[37,5,11,19],[38,0,62,2,"pop"],[38,4,62,2,"pop"],[38,7,11,19],[38,22,62,6,"state"],[38,27,11,19],[38,29,62,13],[39,0,63,4],[39,10,63,8,"state"],[39,15,63,13],[39,16,63,14,"index"],[39,21,63,8],[39,25,63,23],[39,26,63,4],[39,28,63,26],[40,0,65,6],[40,15,65,13,"state"],[40,20,65,6],[41,0,66,5],[43,0,67,4],[43,10,67,10,"routes"],[43,16,67,16],[43,19,67,19,"state"],[43,24,67,24],[43,25,67,25,"routes"],[43,31,67,19],[43,32,67,32,"slice"],[43,37,67,19],[43,38,67,38],[43,39,67,19],[43,41,67,41],[43,42,67,42],[43,43,67,19],[43,44,67,4],[44,0,68,4],[44,45,69,9,"state"],[44,50,68,4],[45,0,70,6,"index"],[45,8,70,6,"index"],[45,13,70,11],[45,15,70,13,"routes"],[45,21,70,19],[45,22,70,20,"length"],[45,28,70,13],[45,31,70,29],[45,32,68,4],[46,0,71,6,"routes"],[46,8,71,6,"routes"],[46,14,71,12],[46,16,71,6,"routes"],[47,0,68,4],[48,0,73,3],[48,5,11,19],[49,0,78,2,"jumpToIndex"],[49,4,78,2,"jumpToIndex"],[49,15,11,19],[49,38,78,14,"state"],[49,43,11,19],[49,45,78,21,"index"],[49,50,11,19],[49,52,78,28],[50,0,79,4],[50,10,79,8,"index"],[50,15,79,13],[50,20,79,18,"state"],[50,25,79,23],[50,26,79,24,"index"],[50,31,79,4],[50,33,79,31],[51,0,80,6],[51,15,80,13,"state"],[51,20,80,6],[52,0,81,5],[54,0,83,4],[54,30,83,14],[54,31,83,15],[54,32,83,16,"state"],[54,37,83,21],[54,38,83,22,"routes"],[54,44,83,16],[54,45,83,29,"index"],[54,50,83,16],[54,51,83,4],[54,53,83,37],[54,82,83,4],[54,84,83,68,"index"],[54,89,83,4],[55,0,85,4],[55,45,86,9,"state"],[55,50,85,4],[56,0,87,6,"index"],[56,8,87,6,"index"],[56,13,87,11],[56,15,87,6,"index"],[57,0,85,4],[58,0,89,3],[58,5,11,19],[59,0,94,2,"jumpTo"],[59,4,94,2,"jumpTo"],[59,10,11,19],[59,28,94,9,"state"],[59,33,11,19],[59,35,94,16,"key"],[59,38,11,19],[59,40,94,21],[60,0,95,4],[60,10,95,10,"index"],[60,15,95,15],[60,18,95,18,"StateUtils"],[60,28,95,28],[60,29,95,29,"indexOf"],[60,36,95,18],[60,37,95,37,"state"],[60,42,95,18],[60,44,95,44,"key"],[60,47,95,18],[60,48,95,4],[61,0,96,4],[61,13,96,11,"StateUtils"],[61,23,96,21],[61,24,96,22,"jumpToIndex"],[61,35,96,11],[61,36,96,34,"state"],[61,41,96,11],[61,43,96,41,"index"],[61,48,96,11],[61,49,96,4],[62,0,97,3],[62,5,11,19],[63,0,102,2,"back"],[63,4,102,2,"back"],[63,8,11,19],[63,24,102,7,"state"],[63,29,11,19],[63,31,102,14],[64,0,103,4],[64,10,103,10,"index"],[64,15,103,15],[64,18,103,18,"state"],[64,23,103,23],[64,24,103,24,"index"],[64,29,103,18],[64,32,103,32],[64,33,103,4],[65,0,104,4],[65,10,104,10,"route"],[65,15,104,15],[65,18,104,18,"state"],[65,23,104,23],[65,24,104,24,"routes"],[65,30,104,18],[65,31,104,31,"index"],[65,36,104,18],[65,37,104,4],[66,0,105,4],[66,13,105,11,"route"],[66,18,105,16],[66,21,105,19,"StateUtils"],[66,31,105,29],[66,32,105,30,"jumpToIndex"],[66,43,105,19],[66,44,105,42,"state"],[66,49,105,19],[66,51,105,49,"index"],[66,56,105,19],[66,57,105,16],[66,60,105,58,"state"],[66,65,105,4],[67,0,106,3],[67,5,11,19],[68,0,111,2,"forward"],[68,4,111,2,"forward"],[68,11,11,19],[68,30,111,10,"state"],[68,35,11,19],[68,37,111,17],[69,0,112,4],[69,10,112,10,"index"],[69,15,112,15],[69,18,112,18,"state"],[69,23,112,23],[69,24,112,24,"index"],[69,29,112,18],[69,32,112,32],[69,33,112,4],[70,0,113,4],[70,10,113,10,"route"],[70,15,113,15],[70,18,113,18,"state"],[70,23,113,23],[70,24,113,24,"routes"],[70,30,113,18],[70,31,113,31,"index"],[70,36,113,18],[70,37,113,4],[71,0,114,4],[71,13,114,11,"route"],[71,18,114,16],[71,21,114,19,"StateUtils"],[71,31,114,29],[71,32,114,30,"jumpToIndex"],[71,43,114,19],[71,44,114,42,"state"],[71,49,114,19],[71,51,114,49,"index"],[71,56,114,19],[71,57,114,16],[71,60,114,58,"state"],[71,65,114,4],[72,0,115,3],[72,5,11,19],[73,0,122,2,"replaceAt"],[73,4,122,2,"replaceAt"],[73,13,11,19],[73,34,122,12,"state"],[73,39,11,19],[73,41,122,19,"key"],[73,44,11,19],[73,46,122,24,"route"],[73,51,11,19],[73,53,122,31],[74,0,123,4],[74,10,123,10,"index"],[74,15,123,15],[74,18,123,18,"StateUtils"],[74,28,123,28],[74,29,123,29,"indexOf"],[74,36,123,18],[74,37,123,37,"state"],[74,42,123,18],[74,44,123,44,"key"],[74,47,123,18],[74,48,123,4],[75,0,124,4],[75,13,124,11,"StateUtils"],[75,23,124,21],[75,24,124,22,"replaceAtIndex"],[75,38,124,11],[75,39,124,37,"state"],[75,44,124,11],[75,46,124,44,"index"],[75,51,124,11],[75,53,124,51,"route"],[75,58,124,11],[75,59,124,4],[76,0,125,3],[76,5,11,19],[77,0,132,2,"replaceAtIndex"],[77,4,132,2,"replaceAtIndex"],[77,18,11,19],[77,44,132,17,"state"],[77,49,11,19],[77,51,132,24,"index"],[77,56,11,19],[77,58,132,31,"route"],[77,63,11,19],[77,65,132,38],[78,0,133,4],[78,30,134,6],[78,31,134,7],[78,32,134,8,"state"],[78,37,134,13],[78,38,134,14,"routes"],[78,44,134,8],[78,45,134,21,"index"],[78,50,134,8],[78,51,133,4],[78,53,135,6],[78,94,133,4],[78,96,136,6,"index"],[78,101,133,4],[78,103,137,6,"route"],[78,108,137,11],[78,109,137,12,"key"],[78,112,133,4],[80,0,140,4],[80,10,140,8,"state"],[80,15,140,13],[80,16,140,14,"routes"],[80,22,140,8],[80,23,140,21,"index"],[80,28,140,8],[80,34,140,32,"route"],[80,39,140,4],[80,41,140,39],[81,0,141,6],[81,15,141,13,"state"],[81,20,141,6],[82,0,142,5],[84,0,144,4],[84,10,144,10,"routes"],[84,16,144,16],[84,19,144,19,"state"],[84,24,144,24],[84,25,144,25,"routes"],[84,31,144,19],[84,32,144,32,"slice"],[84,37,144,19],[84,39,144,4],[85,0,145,4,"routes"],[85,6,145,4,"routes"],[85,12,145,10],[85,13,145,11,"index"],[85,18,145,10],[85,19,145,4],[85,22,145,20,"route"],[85,27,145,4],[86,0,147,4],[86,45,148,9,"state"],[86,50,147,4],[87,0,149,6,"index"],[87,8,149,6,"index"],[87,13,149,11],[87,15,149,6,"index"],[87,20,147,4],[88,0,150,6,"routes"],[88,8,150,6,"routes"],[88,14,150,12],[88,16,150,6,"routes"],[89,0,147,4],[90,0,152,3],[90,5,11,19],[91,0,159,2,"reset"],[91,4,159,2,"reset"],[91,9,11,19],[91,26,159,8,"state"],[91,31,11,19],[91,33,159,15,"routes"],[91,39,11,19],[91,41,159,23,"index"],[91,46,11,19],[91,48,159,30],[92,0,160,4],[92,30,161,6,"routes"],[92,36,161,12],[92,37,161,13,"length"],[92,43,161,6],[92,47,161,23,"Array"],[92,52,161,28],[92,53,161,29,"isArray"],[92,60,161,23],[92,61,161,37,"routes"],[92,67,161,23],[92,68,160,4],[92,70,162,6],[92,97,160,4],[93,0,165,4],[93,10,165,10,"nextIndex"],[93,19,165,19],[93,22,165,22,"index"],[93,27,165,27],[93,32,165,32,"undefined"],[93,41,165,22],[93,44,165,44,"routes"],[93,50,165,50],[93,51,165,51,"length"],[93,57,165,44],[93,60,165,60],[93,61,165,22],[93,64,165,64,"index"],[93,69,165,4],[95,0,167,4],[95,10,167,8,"state"],[95,15,167,13],[95,16,167,14,"routes"],[95,22,167,8],[95,23,167,21,"length"],[95,29,167,8],[95,34,167,32,"routes"],[95,40,167,38],[95,41,167,39,"length"],[95,47,167,8],[95,51,167,49,"state"],[95,56,167,54],[95,57,167,55,"index"],[95,62,167,49],[95,67,167,65,"nextIndex"],[95,76,167,4],[95,78,167,76],[96,0,168,6],[96,12,168,12,"compare"],[96,19,168,19],[96,22,168,22],[96,31,168,12,"compare"],[96,38,168,22],[96,39,168,23,"route"],[96,44,168,22],[96,46,168,30,"ii"],[96,48,168,22],[97,0,168,22],[97,17,168,37,"routes"],[97,23,168,43],[97,24,168,44,"ii"],[97,26,168,43],[97,27,168,37],[97,32,168,52,"route"],[97,37,168,22],[98,0,168,22],[98,9,168,6],[100,0,169,6],[100,12,169,10,"state"],[100,17,169,15],[100,18,169,16,"routes"],[100,24,169,10],[100,25,169,23,"every"],[100,30,169,10],[100,31,169,29,"compare"],[100,38,169,10],[100,39,169,6],[100,41,169,39],[101,0,170,8],[101,17,170,15,"state"],[101,22,170,8],[102,0,171,7],[103,0,172,5],[105,0,174,4],[105,30,174,14],[105,31,174,15],[105,32,174,16,"routes"],[105,38,174,22],[105,39,174,23,"nextIndex"],[105,48,174,22],[105,49,174,4],[105,51,174,35],[105,78,174,4],[105,80,174,64,"nextIndex"],[105,89,174,4],[106,0,176,4],[106,45,177,9,"state"],[106,50,176,4],[107,0,178,6,"index"],[107,8,178,6,"index"],[107,13,178,11],[107,15,178,13,"nextIndex"],[107,24,176,4],[108,0,179,6,"routes"],[108,8,179,6,"routes"],[108,14,179,12],[108,16,179,6,"routes"],[109,0,176,4],[110,0,181,3],[111,0,11,19],[111,3,11,0],[112,17,184,15,"StateUtils"],[112,27]]},"type":"js/module"}]}