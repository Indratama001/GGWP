{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"path-to-regexp","data":{"isAsync":false}},{"name":"../NavigationActions","data":{"isAsync":false}},{"name":"./createConfigGetter","data":{"isAsync":false}},{"name":"./getScreenForRouteName","data":{"isAsync":false}},{"name":"../StateUtils","data":{"isAsync":false}},{"name":"./validateRouteConfigMap","data":{"isAsync":false}},{"name":"./getScreenConfigDeprecated","data":{"isAsync":false}},{"name":"../utils/invariant","data":{"isAsync":false}},{"name":"./KeyGenerator","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _pathToRegexp = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"path-to-regexp\"));\n\n  var _NavigationActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"../NavigationActions\"));\n\n  var _createConfigGetter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./createConfigGetter\"));\n\n  var _getScreenForRouteName = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./getScreenForRouteName\"));\n\n  var _StateUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../StateUtils\"));\n\n  var _validateRouteConfigMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./validateRouteConfigMap\"));\n\n  var _getScreenConfigDeprecated = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./getScreenConfigDeprecated\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"../utils/invariant\"));\n\n  var _KeyGenerator = _$$_REQUIRE(_dependencyMap[12], \"./KeyGenerator\");\n\n  function isEmpty(obj) {\n    if (!obj) return true;\n\n    for (var key in obj) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function behavesLikePushAction(action) {\n    return action.type === _NavigationActions.default.NAVIGATE || action.type === _NavigationActions.default.PUSH;\n  }\n\n  var _default = function _default(routeConfigs) {\n    var stackConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _validateRouteConfigMap.default)(routeConfigs);\n    var childRouters = {};\n    var routeNames = Object.keys(routeConfigs);\n    routeNames.forEach(function (routeName) {\n      var screen = (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n\n      if (screen && screen.router) {\n        childRouters[routeName] = screen.router;\n      } else {\n        childRouters[routeName] = null;\n      }\n    });\n    var initialRouteParams = stackConfig.initialRouteParams;\n    var initialRouteName = stackConfig.initialRouteName || routeNames[0];\n    var initialChildRouter = childRouters[initialRouteName];\n    var pathsByRouteNames = (0, _objectSpread2.default)({}, stackConfig.paths) || {};\n    var paths = [];\n\n    function getInitialState(action) {\n      var route = {};\n      var childRouter = childRouters[action.routeName];\n\n      if (behavesLikePushAction(action) && childRouter !== undefined) {\n        var childState = {};\n\n        if (childRouter !== null) {\n          var childAction = action.action || _NavigationActions.default.init({\n            params: action.params\n          });\n\n          childState = childRouter.getStateForAction(childAction);\n        }\n\n        return {\n          key: 'StackRouterRoot',\n          isTransitioning: false,\n          index: 0,\n          routes: [(0, _objectSpread2.default)({\n            params: action.params\n          }, childState, {\n            key: action.key || (0, _KeyGenerator.generateKey)(),\n            routeName: action.routeName\n          })]\n        };\n      }\n\n      if (initialChildRouter) {\n        route = initialChildRouter.getStateForAction(_NavigationActions.default.navigate({\n          routeName: initialRouteName,\n          params: initialRouteParams\n        }));\n      }\n\n      var params = (route.params || action.params || initialRouteParams) && (0, _objectSpread2.default)({}, route.params || {}, action.params || {}, initialRouteParams || {});\n      var initialRouteKey = stackConfig.initialRouteKey;\n      route = (0, _objectSpread2.default)({}, route, params ? {\n        params: params\n      } : {}, {\n        routeName: initialRouteName,\n        key: action.key || initialRouteKey || (0, _KeyGenerator.generateKey)()\n      });\n      return {\n        key: 'StackRouterRoot',\n        isTransitioning: false,\n        index: 0,\n        routes: [route]\n      };\n    }\n\n    routeNames.forEach(function (routeName) {\n      var pathPattern = pathsByRouteNames[routeName] || routeConfigs[routeName].path;\n      var matchExact = !!pathPattern && !childRouters[routeName];\n\n      if (pathPattern === undefined) {\n        pathPattern = routeName;\n      }\n\n      var keys = [];\n      var re, toPath, priority;\n\n      if (typeof pathPattern === 'string') {\n        re = (0, _pathToRegexp.default)(pathPattern, keys);\n        toPath = _pathToRegexp.default.compile(pathPattern);\n        priority = 0;\n      } else {\n        re = (0, _pathToRegexp.default)('*', keys);\n\n        toPath = function toPath() {\n          return '';\n        };\n\n        matchExact = true;\n        priority = -1;\n      }\n\n      if (!matchExact) {\n        var wildcardRe = (0, _pathToRegexp.default)(pathPattern + \"/*\", keys);\n        re = new RegExp(\"(?:\" + re.source + \")|(?:\" + wildcardRe.source + \")\");\n      }\n\n      pathsByRouteNames[routeName] = {\n        re: re,\n        keys: keys,\n        toPath: toPath,\n        priority: priority\n      };\n    });\n    paths = Object.entries(pathsByRouteNames);\n    paths.sort(function (a, b) {\n      return b[1].priority - a[1].priority;\n    });\n    return {\n      getComponentForState: function getComponentForState(state) {\n        var activeChildRoute = state.routes[state.index];\n        var routeName = activeChildRoute.routeName;\n\n        if (childRouters[routeName]) {\n          return childRouters[routeName].getComponentForState(activeChildRoute);\n        }\n\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getComponentForRouteName: function getComponentForRouteName(routeName) {\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getStateForAction: function getStateForAction(action, state) {\n        if (!state) {\n          return getInitialState(action);\n        }\n\n        if (action.type !== _NavigationActions.default.RESET || action.key !== null) {\n          var keyIndex = action.key ? _StateUtils.default.indexOf(state, action.key) : -1;\n          var childIndex = keyIndex >= 0 ? keyIndex : state.index;\n          var childRoute = state.routes[childIndex];\n          (0, _invariant.default)(childRoute, \"StateUtils erroneously thought index \" + childIndex + \" exists\");\n          var childRouter = childRouters[childRoute.routeName];\n\n          if (childRouter) {\n            var route = childRouter.getStateForAction(action, childRoute);\n\n            if (route === null) {\n              return state;\n            }\n\n            if (route && route !== childRoute) {\n              return _StateUtils.default.replaceAt(state, childRoute.key, route);\n            }\n          }\n        }\n\n        if (behavesLikePushAction(action) && childRouters[action.routeName] !== undefined) {\n          var _childRouter = childRouters[action.routeName];\n\n          var _route;\n\n          (0, _invariant.default)(action.type !== _NavigationActions.default.PUSH || action.key == null, 'StackRouter does not support key on the push action');\n\n          if (action.key) {\n            var lastRouteIndex = state.routes.findIndex(function (r) {\n              return r.key === action.key;\n            });\n\n            if (lastRouteIndex !== -1) {\n              if (state.index === lastRouteIndex && !action.params) {\n                return state;\n              }\n\n              var routes = state.routes.slice(0, lastRouteIndex + 1);\n\n              if (action.params) {\n                var _route2 = state.routes.find(function (r) {\n                  return r.key === action.key;\n                });\n\n                routes[lastRouteIndex] = (0, _objectSpread2.default)({}, _route2, {\n                  params: (0, _objectSpread2.default)({}, _route2.params, action.params)\n                });\n              }\n\n              return (0, _objectSpread2.default)({}, state, {\n                isTransitioning: state.index !== lastRouteIndex ? action.immediate !== true : undefined,\n                index: lastRouteIndex,\n                routes: routes\n              });\n            }\n          }\n\n          if (_childRouter) {\n            var childAction = action.action || _NavigationActions.default.init({\n              params: action.params\n            });\n\n            _route = (0, _objectSpread2.default)({\n              params: action.params\n            }, _childRouter.getStateForAction(childAction), {\n              routeName: action.routeName,\n              key: action.key || (0, _KeyGenerator.generateKey)()\n            });\n          } else {\n            _route = {\n              params: action.params,\n              routeName: action.routeName,\n              key: action.key || (0, _KeyGenerator.generateKey)()\n            };\n          }\n\n          return (0, _objectSpread2.default)({}, _StateUtils.default.push(state, _route), {\n            isTransitioning: action.immediate !== true\n          });\n        } else if (action.type === _NavigationActions.default.PUSH && childRouters[action.routeName] === undefined) {\n          return (0, _objectSpread2.default)({}, state);\n        }\n\n        if (behavesLikePushAction(action)) {\n          var childRouterNames = Object.keys(childRouters);\n\n          for (var i = 0; i < childRouterNames.length; i++) {\n            var childRouterName = childRouterNames[i];\n            var _childRouter2 = childRouters[childRouterName];\n\n            if (_childRouter2) {\n              var initChildRoute = _childRouter2.getStateForAction(_NavigationActions.default.init());\n\n              var navigatedChildRoute = _childRouter2.getStateForAction(action, initChildRoute);\n\n              var routeToPush = null;\n\n              if (navigatedChildRoute === null) {\n                routeToPush = initChildRoute;\n              } else if (navigatedChildRoute !== initChildRoute) {\n                routeToPush = navigatedChildRoute;\n              }\n\n              if (routeToPush) {\n                var _route3 = (0, _objectSpread2.default)({}, routeToPush, {\n                  routeName: childRouterName,\n                  key: action.key || (0, _KeyGenerator.generateKey)()\n                });\n\n                return _StateUtils.default.push(state, _route3);\n              }\n            }\n          }\n        }\n\n        if (action.type === _NavigationActions.default.POP_TO_TOP) {\n          if (action.key && state.key !== action.key) {\n            return state;\n          }\n\n          if (state.index === 0) {\n            return (0, _objectSpread2.default)({}, state);\n          } else {\n            return (0, _objectSpread2.default)({}, state, {\n              isTransitioning: action.immediate !== true,\n              index: 0,\n              routes: [state.routes[0]]\n            });\n          }\n\n          return state;\n        }\n\n        if (action.type === _NavigationActions.default.REPLACE) {\n          var routeIndex = state.routes.findIndex(function (r) {\n            return r.key === action.key;\n          });\n\n          if (routeIndex !== -1) {\n            var _childRouter3 = childRouters[action.routeName];\n            var childState = {};\n\n            if (_childRouter3) {\n              var _childAction = action.action || _NavigationActions.default.init({\n                params: action.params\n              });\n\n              childState = _childRouter3.getStateForAction(_childAction);\n            }\n\n            var _routes = (0, _toConsumableArray2.default)(state.routes);\n\n            _routes[routeIndex] = (0, _objectSpread2.default)({\n              params: action.params\n            }, childState, {\n              routeName: action.routeName,\n              key: action.newKey || (0, _KeyGenerator.generateKey)()\n            });\n            return (0, _objectSpread2.default)({}, state, {\n              routes: _routes\n            });\n          }\n        }\n\n        if (action.type === _NavigationActions.default.COMPLETE_TRANSITION && (action.key == null || action.key === state.key) && state.isTransitioning) {\n          return (0, _objectSpread2.default)({}, state, {\n            isTransitioning: false\n          });\n        }\n\n        if (action.type === _NavigationActions.default.SET_PARAMS) {\n          var key = action.key;\n          var lastRoute = state.routes.find(function (route) {\n            return route.key === key;\n          });\n\n          if (lastRoute) {\n            var params = (0, _objectSpread2.default)({}, lastRoute.params, action.params);\n\n            var _routes2 = (0, _toConsumableArray2.default)(state.routes);\n\n            _routes2[state.routes.indexOf(lastRoute)] = (0, _objectSpread2.default)({}, lastRoute, {\n              params: params\n            });\n            return (0, _objectSpread2.default)({}, state, {\n              routes: _routes2\n            });\n          }\n        }\n\n        if (action.type === _NavigationActions.default.RESET) {\n          if (action.key != null && action.key != state.key) {\n            return state;\n          }\n\n          var newStackActions = action.actions;\n          return (0, _objectSpread2.default)({}, state, {\n            routes: newStackActions.map(function (newStackAction) {\n              var router = childRouters[newStackAction.routeName];\n              var childState = {};\n\n              if (router) {\n                var _childAction2 = newStackAction.action || _NavigationActions.default.init({\n                  params: newStackAction.params\n                });\n\n                childState = router.getStateForAction(_childAction2);\n              }\n\n              return (0, _objectSpread2.default)({\n                params: newStackAction.params\n              }, childState, {\n                routeName: newStackAction.routeName,\n                key: newStackAction.key || (0, _KeyGenerator.generateKey)()\n              });\n            }),\n            index: action.index\n          });\n        }\n\n        if (action.type === _NavigationActions.default.BACK || action.type === _NavigationActions.default.POP) {\n          var _key = action.key,\n              n = action.n,\n              immediate = action.immediate;\n          var backRouteIndex = state.index;\n\n          if (action.type === _NavigationActions.default.POP && n != null) {\n            backRouteIndex = Math.max(1, state.index - n + 1);\n          } else if (_key) {\n            var backRoute = state.routes.find(function (route) {\n              return route.key === _key;\n            });\n            backRouteIndex = state.routes.indexOf(backRoute);\n          }\n\n          if (backRouteIndex > 0) {\n            return (0, _objectSpread2.default)({}, state, {\n              routes: state.routes.slice(0, backRouteIndex),\n              index: backRouteIndex - 1,\n              isTransitioning: immediate !== true\n            });\n          } else if (backRouteIndex === 0 && action.type === _NavigationActions.default.POP) {\n            return (0, _objectSpread2.default)({}, state);\n          }\n        }\n\n        return state;\n      },\n      getPathAndParamsForState: function getPathAndParamsForState(state) {\n        var route = state.routes[state.index];\n        var routeName = route.routeName;\n        var screen = (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n        var subPath = pathsByRouteNames[routeName].toPath(route.params);\n        var path = subPath;\n        var params = route.params;\n\n        if (screen && screen.router) {\n          var stateRoute = route;\n          var child = screen.router.getPathAndParamsForState(stateRoute);\n          path = subPath ? subPath + \"/\" + child.path : child.path;\n          params = child.params ? (0, _objectSpread2.default)({}, params, child.params) : params;\n        }\n\n        return {\n          path: path,\n          params: params\n        };\n      },\n      getActionForPathAndParams: function getActionForPathAndParams(pathToResolve, inputParams) {\n        if (!pathToResolve) {\n          return _NavigationActions.default.navigate({\n            routeName: initialRouteName\n          });\n        }\n\n        var _pathToResolve$split = pathToResolve.split('?'),\n            _pathToResolve$split2 = (0, _slicedToArray2.default)(_pathToResolve$split, 2),\n            pathNameToResolve = _pathToResolve$split2[0],\n            queryString = _pathToResolve$split2[1];\n\n        var matchedRouteName;\n        var pathMatch;\n        var pathMatchKeys;\n\n        for (var _iterator = paths, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n          var _ref3;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref3 = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref3 = _i.value;\n          }\n\n          var _ref4 = _ref3;\n\n          var _ref2 = (0, _slicedToArray2.default)(_ref4, 2);\n\n          var _routeName = _ref2[0];\n          var _path = _ref2[1];\n          var re = _path.re,\n              keys = _path.keys;\n          pathMatch = re.exec(pathNameToResolve);\n\n          if (pathMatch && pathMatch.length) {\n            pathMatchKeys = keys;\n            matchedRouteName = _routeName;\n            break;\n          }\n        }\n\n        if (!matchedRouteName) {\n          if (!pathToResolve) {\n            return _NavigationActions.default.navigate({\n              routeName: initialRouteName\n            });\n          }\n\n          return null;\n        }\n\n        var nestedAction;\n        var nestedQueryString = queryString ? '?' + queryString : '';\n\n        if (childRouters[matchedRouteName]) {\n          nestedAction = childRouters[matchedRouteName].getActionForPathAndParams(pathMatch.slice(pathMatchKeys.length).join('/') + nestedQueryString);\n\n          if (!nestedAction) {\n            return null;\n          }\n        }\n\n        var queryParams = !isEmpty(inputParams) ? inputParams : (queryString || '').split('&').reduce(function (result, item) {\n          if (item !== '') {\n            var nextResult = result || {};\n\n            var _item$split = item.split('='),\n                _item$split2 = (0, _slicedToArray2.default)(_item$split, 2),\n                key = _item$split2[0],\n                value = _item$split2[1];\n\n            nextResult[key] = value;\n            return nextResult;\n          }\n\n          return result;\n        }, null);\n        var params = pathMatch.slice(1).reduce(function (result, matchResult, i) {\n          var key = pathMatchKeys[i];\n\n          if (key.asterisk || !key) {\n            return result;\n          }\n\n          var nextResult = result || {};\n          var paramName = key.name;\n          var decodedMatchResult;\n\n          try {\n            decodedMatchResult = decodeURIComponent(matchResult);\n          } catch (e) {}\n\n          nextResult[paramName] = decodedMatchResult || matchResult;\n          return nextResult;\n        }, queryParams);\n        return _NavigationActions.default.navigate((0, _objectSpread2.default)({\n          routeName: matchedRouteName\n        }, params ? {\n          params: params\n        } : {}, nestedAction ? {\n          action: nestedAction\n        } : {}));\n      },\n      getScreenOptions: (0, _createConfigGetter.default)(routeConfigs, stackConfig.navigationOptions),\n      getScreenConfig: _getScreenConfigDeprecated.default\n    };\n  };\n\n  exports.default = _default;\n});","map":[[15,0,1,0],[17,0,3,0],[19,0,4,0],[21,0,5,0],[23,0,6,0],[25,0,7,0],[27,0,8,0],[29,0,9,0],[31,0,10,0],[33,0,12,0],[33,11,12,9,"isEmpty"],[33,18,12,0],[33,19,12,17,"obj"],[33,22,12,0],[33,24,12,22],[34,0,13,2],[34,8,13,6],[34,9,13,7,"obj"],[34,12,13,2],[34,14,13,12],[34,21,13,19],[34,25,13,12],[36,0,14,2],[36,9,14,7],[36,13,14,11,"key"],[36,16,14,2],[36,20,14,18,"obj"],[36,23,14,2],[36,25,14,23],[37,0,15,4],[37,13,15,11],[37,18,15,4],[38,0,16,3],[40,0,17,2],[40,11,17,9],[40,15,17,2],[41,0,18,1],[43,0,20,0],[43,11,20,9,"behavesLikePushAction"],[43,32,20,0],[43,33,20,31,"action"],[43,39,20,0],[43,41,20,39],[44,0,21,2],[44,11,22,4,"action"],[44,17,22,10],[44,18,22,11,"type"],[44,22,22,4],[44,27,22,20,"NavigationActions"],[44,54,22,38,"NAVIGATE"],[44,62,22,4],[44,66,23,4,"action"],[44,72,23,10],[44,73,23,11,"type"],[44,77,23,4],[44,82,23,20,"NavigationActions"],[44,109,23,38,"PUSH"],[44,113,21,2],[45,0,25,1],[47,17,27,15],[47,35,27,16,"routeConfigs"],[47,47,27,15],[47,49,27,51],[48,0,27,51],[48,8,27,30,"stackConfig"],[48,19,27,51],[48,90,27,44],[48,92,27,51],[49,0,29,2],[49,41,29,25,"routeConfigs"],[49,53,29,2],[50,0,31,2],[50,8,31,8,"childRouters"],[50,20,31,20],[50,23,31,23],[50,25,31,2],[51,0,32,2],[51,8,32,8,"routeNames"],[51,18,32,18],[51,21,32,21,"Object"],[51,27,32,27],[51,28,32,28,"keys"],[51,32,32,21],[51,33,32,33,"routeConfigs"],[51,45,32,21],[51,46,32,2],[52,0,35,2,"routeNames"],[52,4,35,2,"routeNames"],[52,14,35,12],[52,15,35,13,"forEach"],[52,22,35,2],[52,23,35,21],[52,33,35,21,"routeName"],[52,42,35,30],[52,44,35,34],[53,0,36,4],[53,10,36,10,"screen"],[53,16,36,16],[53,19,36,19],[53,55,36,41,"routeConfigs"],[53,67,36,19],[53,69,36,55,"routeName"],[53,78,36,19],[53,79,36,4],[55,0,37,4],[55,10,37,8,"screen"],[55,16,37,14],[55,20,37,18,"screen"],[55,26,37,24],[55,27,37,25,"router"],[55,33,37,4],[55,35,37,33],[56,0,39,6,"childRouters"],[56,8,39,6,"childRouters"],[56,20,39,18],[56,21,39,19,"routeName"],[56,30,39,18],[56,31,39,6],[56,34,39,32,"screen"],[56,40,39,38],[56,41,39,39,"router"],[56,47,39,6],[57,0,40,5],[57,7,37,4],[57,13,40,11],[58,0,42,6,"childRouters"],[58,8,42,6,"childRouters"],[58,20,42,18],[58,21,42,19,"routeName"],[58,30,42,18],[58,31,42,6],[58,34,42,32],[58,38,42,6],[59,0,43,5],[60,0,44,3],[60,5,35,2],[61,0,27,51],[61,8,46,10,"initialRouteParams"],[61,26,27,51],[61,29,46,33,"stackConfig"],[61,40,27,51],[61,41,46,10,"initialRouteParams"],[61,59,27,51],[62,0,48,2],[62,8,48,8,"initialRouteName"],[62,24,48,24],[62,27,48,27,"stackConfig"],[62,38,48,38],[62,39,48,39,"initialRouteName"],[62,55,48,27],[62,59,48,59,"routeNames"],[62,69,48,69],[62,70,48,70],[62,71,48,69],[62,72,48,2],[63,0,50,2],[63,8,50,8,"initialChildRouter"],[63,26,50,26],[63,29,50,29,"childRouters"],[63,41,50,41],[63,42,50,42,"initialRouteName"],[63,58,50,41],[63,59,50,2],[64,0,51,2],[64,8,51,8,"pathsByRouteNames"],[64,25,51,25],[64,28,51,28],[64,60,51,33,"stackConfig"],[64,71,51,44],[64,72,51,45,"paths"],[64,77,51,28],[64,82,51,56],[64,84,51,2],[65,0,52,2],[65,8,52,6,"paths"],[65,13,52,11],[65,16,52,14],[65,18,52,2],[67,0,54,2],[67,13,54,11,"getInitialState"],[67,28,54,2],[67,29,54,27,"action"],[67,35,54,2],[67,37,54,35],[68,0,55,4],[68,10,55,8,"route"],[68,15,55,13],[68,18,55,16],[68,20,55,4],[69,0,56,4],[69,10,56,10,"childRouter"],[69,21,56,21],[69,24,56,24,"childRouters"],[69,36,56,36],[69,37,56,37,"action"],[69,43,56,43],[69,44,56,44,"routeName"],[69,53,56,36],[69,54,56,4],[71,0,59,4],[71,10,59,8,"behavesLikePushAction"],[71,31,59,29],[71,32,59,30,"action"],[71,38,59,29],[71,39,59,8],[71,43,59,41,"childRouter"],[71,54,59,52],[71,59,59,57,"undefined"],[71,68,59,4],[71,70,59,68],[72,0,60,6],[72,12,60,10,"childState"],[72,22,60,20],[72,25,60,23],[72,27,60,6],[74,0,62,6],[74,12,62,10,"childRouter"],[74,23,62,21],[74,28,62,26],[74,32,62,6],[74,34,62,32],[75,0,63,8],[75,14,63,14,"childAction"],[75,25,63,25],[75,28,64,10,"action"],[75,34,64,16],[75,35,64,17,"action"],[75,41,64,10],[75,45,64,27,"NavigationActions"],[75,72,64,45,"init"],[75,76,64,27],[75,77,64,50],[76,0,64,52,"params"],[76,12,64,52,"params"],[76,18,64,58],[76,20,64,60,"action"],[76,26,64,66],[76,27,64,67,"params"],[77,0,64,50],[77,11,64,27],[77,12,63,8],[79,0,65,8,"childState"],[79,10,65,8,"childState"],[79,20,65,18],[79,23,65,21,"childRouter"],[79,34,65,32],[79,35,65,33,"getStateForAction"],[79,52,65,21],[79,53,65,51,"childAction"],[79,64,65,21],[79,65,65,8],[80,0,66,7],[82,0,67,6],[82,15,67,13],[83,0,68,8,"key"],[83,10,68,8,"key"],[83,13,68,11],[83,15,68,13],[83,32,67,13],[84,0,69,8,"isTransitioning"],[84,10,69,8,"isTransitioning"],[84,25,69,23],[84,27,69,25],[84,32,67,13],[85,0,70,8,"index"],[85,10,70,8,"index"],[85,15,70,13],[85,17,70,15],[85,18,67,13],[86,0,71,8,"routes"],[86,10,71,8,"routes"],[86,16,71,14],[86,18,71,16],[87,0,73,12,"params"],[87,12,73,12,"params"],[87,18,73,18],[87,20,73,20,"action"],[87,26,73,26],[87,27,73,27,"params"],[88,0,71,16],[88,13,74,15,"childState"],[88,23,71,16],[89,0,75,12,"key"],[89,12,75,12,"key"],[89,15,75,15],[89,17,75,17,"action"],[89,23,75,23],[89,24,75,24,"key"],[89,27,75,17],[89,31,75,31],[89,63,71,16],[90,0,76,12,"routeName"],[90,12,76,12,"routeName"],[90,21,76,21],[90,23,76,23,"action"],[90,29,76,29],[90,30,76,30,"routeName"],[91,0,71,16],[92,0,67,13],[92,9,67,6],[93,0,80,5],[95,0,82,4],[95,10,82,8,"initialChildRouter"],[95,28,82,4],[95,30,82,28],[96,0,83,6,"route"],[96,8,83,6,"route"],[96,13,83,11],[96,16,83,14,"initialChildRouter"],[96,34,83,32],[96,35,83,33,"getStateForAction"],[96,52,83,14],[96,53,84,8,"NavigationActions"],[96,80,84,26,"navigate"],[96,88,84,8],[96,89,84,35],[97,0,85,10,"routeName"],[97,10,85,10,"routeName"],[97,19,85,19],[97,21,85,21,"initialRouteName"],[97,37,84,35],[98,0,86,10,"params"],[98,10,86,10,"params"],[98,16,86,16],[98,18,86,18,"initialRouteParams"],[99,0,84,35],[99,9,84,8],[99,10,83,14],[99,11,83,6],[100,0,89,5],[102,0,90,4],[102,10,90,10,"params"],[102,16,90,16],[102,19,90,19],[102,20,90,20,"route"],[102,25,90,25],[102,26,90,26,"params"],[102,32,90,20],[102,36,90,36,"action"],[102,42,90,42],[102,43,90,43,"params"],[102,49,90,20],[102,53,90,53,"initialRouteParams"],[102,71,90,19],[102,108,91,10,"route"],[102,113,91,15],[102,114,91,16,"params"],[102,120,91,10],[102,124,91,26],[102,126,90,19],[102,128,92,10,"action"],[102,134,92,16],[102,135,92,17,"params"],[102,141,92,10],[102,145,92,27],[102,147,90,19],[102,149,93,10,"initialRouteParams"],[102,167,93,28],[102,171,93,32],[102,173,90,19],[102,174,90,4],[103,0,54,35],[103,10,95,12,"initialRouteKey"],[103,25,54,35],[103,28,95,32,"stackConfig"],[103,39,54,35],[103,40,95,12,"initialRouteKey"],[103,55,54,35],[104,0,96,4,"route"],[104,6,96,4,"route"],[104,11,96,9],[104,46,97,9,"route"],[104,51,96,9],[104,53,98,10,"params"],[104,59,98,16],[104,62,98,19],[105,0,98,21,"params"],[105,8,98,21,"params"],[105,14,98,27],[105,16,98,21,"params"],[106,0,98,19],[106,7,98,16],[106,10,98,32],[106,12,96,9],[107,0,99,6,"routeName"],[107,8,99,6,"routeName"],[107,17,99,15],[107,19,99,17,"initialRouteName"],[107,35,96,9],[108,0,100,6,"key"],[108,8,100,6,"key"],[108,11,100,9],[108,13,100,11,"action"],[108,19,100,17],[108,20,100,18,"key"],[108,23,100,11],[108,27,100,26,"initialRouteKey"],[108,42,100,41],[108,46,100,45],[109,0,96,9],[109,8,96,4],[110,0,102,4],[110,13,102,11],[111,0,103,6,"key"],[111,8,103,6,"key"],[111,11,103,9],[111,13,103,11],[111,30,102,11],[112,0,104,6,"isTransitioning"],[112,8,104,6,"isTransitioning"],[112,23,104,21],[112,25,104,23],[112,30,102,11],[113,0,105,6,"index"],[113,8,105,6,"index"],[113,13,105,11],[113,15,105,13],[113,16,102,11],[114,0,106,6,"routes"],[114,8,106,6,"routes"],[114,14,106,12],[114,16,106,14],[114,17,106,15,"route"],[114,22,106,14],[115,0,102,11],[115,7,102,4],[116,0,108,3],[118,0,111,2,"routeNames"],[118,4,111,2,"routeNames"],[118,14,111,12],[118,15,111,13,"forEach"],[118,22,111,2],[118,23,111,21],[118,33,111,21,"routeName"],[118,42,111,30],[118,44,111,34],[119,0,112,4],[119,10,112,8,"pathPattern"],[119,21,112,19],[119,24,113,6,"pathsByRouteNames"],[119,41,113,23],[119,42,113,24,"routeName"],[119,51,113,23],[119,52,113,6],[119,56,113,38,"routeConfigs"],[119,68,113,50],[119,69,113,51,"routeName"],[119,78,113,50],[119,79,113,38],[119,80,113,62,"path"],[119,84,112,4],[120,0,114,4],[120,10,114,8,"matchExact"],[120,20,114,18],[120,23,114,21],[120,24,114,22],[120,25,114,23,"pathPattern"],[120,36,114,21],[120,40,114,38],[120,41,114,39,"childRouters"],[120,53,114,51],[120,54,114,52,"routeName"],[120,63,114,51],[120,64,114,4],[122,0,115,4],[122,10,115,8,"pathPattern"],[122,21,115,19],[122,26,115,24,"undefined"],[122,35,115,4],[122,37,115,35],[123,0,116,6,"pathPattern"],[123,8,116,6,"pathPattern"],[123,19,116,17],[123,22,116,20,"routeName"],[123,31,116,6],[124,0,117,5],[126,0,118,4],[126,10,118,10,"keys"],[126,14,118,14],[126,17,118,17],[126,19,118,4],[127,0,119,4],[127,10,119,8,"re"],[127,12,119,4],[127,14,119,12,"toPath"],[127,20,119,4],[127,22,119,20,"priority"],[127,30,119,4],[129,0,120,4],[129,10,120,8],[129,17,120,15,"pathPattern"],[129,28,120,8],[129,33,120,31],[129,41,120,4],[129,43,120,41],[130,0,122,6,"re"],[130,8,122,6,"re"],[130,10,122,8],[130,13,122,11],[130,40,122,24,"pathPattern"],[130,51,122,11],[130,53,122,37,"keys"],[130,57,122,11],[130,58,122,6],[131,0,123,6,"toPath"],[131,8,123,6,"toPath"],[131,14,123,12],[131,17,123,15,"pathToRegexp"],[131,39,123,28,"compile"],[131,46,123,15],[131,47,123,36,"pathPattern"],[131,58,123,15],[131,59,123,6],[132,0,124,6,"priority"],[132,8,124,6,"priority"],[132,16,124,14],[132,19,124,17],[132,20,124,6],[133,0,125,5],[133,7,120,4],[133,13,125,11],[134,0,127,6,"re"],[134,8,127,6,"re"],[134,10,127,8],[134,13,127,11],[134,40,127,24],[134,43,127,11],[134,45,127,29,"keys"],[134,49,127,11],[134,50,127,6],[136,0,128,6,"toPath"],[136,8,128,6,"toPath"],[136,14,128,12],[136,17,128,15],[137,0,128,15],[137,17,128,21],[137,19,128,15],[138,0,128,15],[138,9,128,6],[140,0,129,6,"matchExact"],[140,8,129,6,"matchExact"],[140,18,129,16],[140,21,129,19],[140,25,129,6],[141,0,130,6,"priority"],[141,8,130,6,"priority"],[141,16,130,14],[141,19,130,17],[141,20,130,18],[141,21,130,6],[142,0,131,5],[144,0,132,4],[144,10,132,8],[144,11,132,9,"matchExact"],[144,21,132,4],[144,23,132,21],[145,0,133,6],[145,12,133,12,"wildcardRe"],[145,22,133,22],[145,25,133,25],[145,52,133,41,"pathPattern"],[145,63,133,25],[145,72,133,58,"keys"],[145,76,133,25],[145,77,133,6],[146,0,134,6,"re"],[146,8,134,6,"re"],[146,10,134,8],[146,13,134,11],[146,17,134,15,"RegExp"],[146,23,134,11],[146,32,134,28,"re"],[146,34,134,30],[146,35,134,31,"source"],[146,41,134,11],[146,54,134,45,"wildcardRe"],[146,64,134,55],[146,65,134,56,"source"],[146,71,134,11],[146,78,134,6],[147,0,135,5],[149,0,136,4,"pathsByRouteNames"],[149,6,136,4,"pathsByRouteNames"],[149,23,136,21],[149,24,136,22,"routeName"],[149,33,136,21],[149,34,136,4],[149,37,136,35],[150,0,136,37,"re"],[150,8,136,37,"re"],[150,10,136,39],[150,12,136,37,"re"],[150,14,136,35],[151,0,136,41,"keys"],[151,8,136,41,"keys"],[151,12,136,45],[151,14,136,41,"keys"],[151,18,136,35],[152,0,136,47,"toPath"],[152,8,136,47,"toPath"],[152,14,136,53],[152,16,136,47,"toPath"],[152,22,136,35],[153,0,136,55,"priority"],[153,8,136,55,"priority"],[153,16,136,63],[153,18,136,55,"priority"],[154,0,136,35],[154,7,136,4],[155,0,137,3],[155,5,111,2],[156,0,139,2,"paths"],[156,4,139,2,"paths"],[156,9,139,7],[156,12,139,10,"Object"],[156,18,139,16],[156,19,139,17,"entries"],[156,26,139,10],[156,27,139,25,"pathsByRouteNames"],[156,44,139,10],[156,45,139,2],[157,0,140,2,"paths"],[157,4,140,2,"paths"],[157,9,140,7],[157,10,140,8,"sort"],[157,14,140,2],[157,15,140,13],[157,25,140,14,"a"],[157,26,140,13],[157,28,140,30,"b"],[157,29,140,13],[158,0,140,13],[158,13,140,49,"b"],[158,14,140,50],[158,15,140,51],[158,16,140,50],[158,17,140,49],[158,18,140,54,"priority"],[158,26,140,49],[158,29,140,65,"a"],[158,30,140,66],[158,31,140,67],[158,32,140,66],[158,33,140,65],[158,34,140,70,"priority"],[158,42,140,13],[159,0,140,13],[159,5,140,2],[160,0,142,2],[160,11,142,9],[161,0,143,4,"getComponentForState"],[161,6,143,4,"getComponentForState"],[161,26,142,9],[161,58,143,25,"state"],[161,63,142,9],[161,65,143,32],[162,0,144,6],[162,12,144,12,"activeChildRoute"],[162,28,144,28],[162,31,144,31,"state"],[162,36,144,36],[162,37,144,37,"routes"],[162,43,144,31],[162,44,144,44,"state"],[162,49,144,49],[162,50,144,50,"index"],[162,55,144,31],[162,56,144,6],[163,0,143,32],[163,12,145,14,"routeName"],[163,21,143,32],[163,24,145,28,"activeChildRoute"],[163,40,143,32],[163,41,145,14,"routeName"],[163,50,143,32],[165,0,146,6],[165,12,146,10,"childRouters"],[165,24,146,22],[165,25,146,23,"routeName"],[165,34,146,22],[165,35,146,6],[165,37,146,35],[166,0,147,8],[166,17,147,15,"childRouters"],[166,29,147,27],[166,30,147,28,"routeName"],[166,39,147,27],[166,40,147,15],[166,41,147,39,"getComponentForState"],[166,61,147,15],[166,62,147,60,"activeChildRoute"],[166,78,147,15],[166,79,147,8],[167,0,148,7],[169,0,149,6],[169,15,149,13],[169,51,149,35,"routeConfigs"],[169,63,149,13],[169,65,149,49,"routeName"],[169,74,149,13],[169,75,149,6],[170,0,150,5],[170,7,142,9],[171,0,152,4,"getComponentForRouteName"],[171,6,152,4,"getComponentForRouteName"],[171,30,142,9],[171,66,152,29,"routeName"],[171,75,142,9],[171,77,152,40],[172,0,153,6],[172,15,153,13],[172,51,153,35,"routeConfigs"],[172,63,153,13],[172,65,153,49,"routeName"],[172,74,153,13],[172,75,153,6],[173,0,154,5],[173,7,142,9],[174,0,156,4,"getStateForAction"],[174,6,156,4,"getStateForAction"],[174,23,142,9],[174,52,156,22,"action"],[174,58,142,9],[174,60,156,30,"state"],[174,65,142,9],[174,67,156,37],[175,0,158,6],[175,12,158,10],[175,13,158,11,"state"],[175,18,158,6],[175,20,158,18],[176,0,159,8],[176,17,159,15,"getInitialState"],[176,32,159,30],[176,33,159,31,"action"],[176,39,159,30],[176,40,159,8],[177,0,160,7],[179,0,164,6],[179,12,164,10,"action"],[179,18,164,16],[179,19,164,17,"type"],[179,23,164,10],[179,28,164,26,"NavigationActions"],[179,55,164,44,"RESET"],[179,60,164,10],[179,64,164,53,"action"],[179,70,164,59],[179,71,164,60,"key"],[179,74,164,53],[179,79,164,68],[179,83,164,6],[179,85,164,74],[180,0,165,8],[180,14,165,14,"keyIndex"],[180,22,165,22],[180,25,165,25,"action"],[180,31,165,31],[180,32,165,32,"key"],[180,35,165,25],[180,38,166,12,"StateUtils"],[180,58,166,23,"indexOf"],[180,65,166,12],[180,66,166,31,"state"],[180,71,166,12],[180,73,166,38,"action"],[180,79,166,44],[180,80,166,45,"key"],[180,83,166,12],[180,84,165,25],[180,87,167,12],[180,88,167,13],[180,89,165,8],[181,0,168,8],[181,14,168,14,"childIndex"],[181,24,168,24],[181,27,168,27,"keyIndex"],[181,35,168,35],[181,39,168,39],[181,40,168,27],[181,43,168,43,"keyIndex"],[181,51,168,27],[181,54,168,54,"state"],[181,59,168,59],[181,60,168,60,"index"],[181,65,168,8],[182,0,169,8],[182,14,169,14,"childRoute"],[182,24,169,24],[182,27,169,27,"state"],[182,32,169,32],[182,33,169,33,"routes"],[182,39,169,27],[182,40,169,40,"childIndex"],[182,50,169,27],[182,51,169,8],[183,0,170,8],[183,34,171,10,"childRoute"],[183,44,170,8],[183,88,172,50,"childIndex"],[183,98,170,8],[184,0,174,8],[184,14,174,14,"childRouter"],[184,25,174,25],[184,28,174,28,"childRouters"],[184,40,174,40],[184,41,174,41,"childRoute"],[184,51,174,51],[184,52,174,52,"routeName"],[184,61,174,40],[184,62,174,8],[186,0,175,8],[186,14,175,12,"childRouter"],[186,25,175,8],[186,27,175,25],[187,0,176,10],[187,16,176,16,"route"],[187,21,176,21],[187,24,176,24,"childRouter"],[187,35,176,35],[187,36,176,36,"getStateForAction"],[187,53,176,24],[187,54,176,54,"action"],[187,60,176,24],[187,62,176,62,"childRoute"],[187,72,176,24],[187,73,176,10],[189,0,177,10],[189,16,177,14,"route"],[189,21,177,19],[189,26,177,24],[189,30,177,10],[189,32,177,30],[190,0,178,12],[190,21,178,19,"state"],[190,26,178,12],[191,0,179,11],[193,0,180,10],[193,16,180,14,"route"],[193,21,180,19],[193,25,180,23,"route"],[193,30,180,28],[193,35,180,33,"childRoute"],[193,45,180,10],[193,47,180,45],[194,0,181,12],[194,21,181,19,"StateUtils"],[194,41,181,30,"replaceAt"],[194,50,181,19],[194,51,181,40,"state"],[194,56,181,19],[194,58,181,47,"childRoute"],[194,68,181,57],[194,69,181,58,"key"],[194,72,181,19],[194,74,181,63,"route"],[194,79,181,19],[194,80,181,12],[195,0,182,11],[196,0,183,9],[197,0,184,7],[199,0,188,6],[199,12,189,8,"behavesLikePushAction"],[199,33,189,29],[199,34,189,30,"action"],[199,40,189,29],[199,41,189,8],[199,45,190,8,"childRouters"],[199,57,190,20],[199,58,190,21,"action"],[199,64,190,27],[199,65,190,28,"routeName"],[199,74,190,20],[199,75,190,8],[199,80,190,43,"undefined"],[199,89,188,6],[199,91,191,8],[200,0,192,8],[200,14,192,14,"childRouter"],[200,26,192,25],[200,29,192,28,"childRouters"],[200,41,192,40],[200,42,192,41,"action"],[200,48,192,47],[200,49,192,48,"routeName"],[200,58,192,40],[200,59,192,8],[202,0,193,8],[202,14,193,12,"route"],[202,20,193,8],[204,0,195,8],[204,34,196,10,"action"],[204,40,196,16],[204,41,196,17,"type"],[204,45,196,10],[204,50,196,26,"NavigationActions"],[204,77,196,44,"PUSH"],[204,81,196,10],[204,85,196,52,"action"],[204,91,196,58],[204,92,196,59,"key"],[204,95,196,52],[204,99,196,66],[204,103,195,8],[204,105,197,10],[204,158,195,8],[206,0,201,8],[206,14,201,12,"action"],[206,20,201,18],[206,21,201,19,"key"],[206,24,201,8],[206,26,201,24],[207,0,202,10],[207,16,202,16,"lastRouteIndex"],[207,30,202,30],[207,33,202,33,"state"],[207,38,202,38],[207,39,202,39,"routes"],[207,45,202,33],[207,46,202,46,"findIndex"],[207,55,202,33],[207,56,203,12],[207,66,203,12,"r"],[207,67,203,13],[208,0,203,13],[208,21,203,17,"r"],[208,22,203,18],[208,23,203,19,"key"],[208,26,203,17],[208,31,203,27,"action"],[208,37,203,33],[208,38,203,34,"key"],[208,41,203,13],[209,0,203,13],[209,13,202,33],[209,14,202,10],[211,0,205,10],[211,16,205,14,"lastRouteIndex"],[211,30,205,28],[211,35,205,33],[211,36,205,34],[211,37,205,10],[211,39,205,37],[212,0,207,12],[212,18,207,16,"state"],[212,23,207,21],[212,24,207,22,"index"],[212,29,207,16],[212,34,207,32,"lastRouteIndex"],[212,48,207,16],[212,52,207,50],[212,53,207,51,"action"],[212,59,207,57],[212,60,207,58,"params"],[212,66,207,12],[212,68,207,66],[213,0,208,14],[213,23,208,21,"state"],[213,28,208,14],[214,0,209,13],[216,0,212,12],[216,18,212,18,"routes"],[216,24,212,24],[216,27,212,27,"state"],[216,32,212,32],[216,33,212,33,"routes"],[216,39,212,27],[216,40,212,40,"slice"],[216,45,212,27],[216,46,212,46],[216,47,212,27],[216,49,212,49,"lastRouteIndex"],[216,63,212,63],[216,66,212,66],[216,67,212,27],[216,68,212,12],[218,0,215,12],[218,18,215,16,"action"],[218,24,215,22],[218,25,215,23,"params"],[218,31,215,12],[218,33,215,31],[219,0,216,14],[219,20,216,20,"route"],[219,27,216,25],[219,30,216,28,"state"],[219,35,216,33],[219,36,216,34,"routes"],[219,42,216,28],[219,43,216,41,"find"],[219,47,216,28],[219,48,216,46],[219,58,216,46,"r"],[219,59,216,47],[220,0,216,47],[220,25,216,51,"r"],[220,26,216,52],[220,27,216,53,"key"],[220,30,216,51],[220,35,216,61,"action"],[220,41,216,67],[220,42,216,68,"key"],[220,45,216,47],[221,0,216,47],[221,17,216,28],[221,18,216,14],[223,0,217,14,"routes"],[223,16,217,14,"routes"],[223,22,217,20],[223,23,217,21,"lastRouteIndex"],[223,37,217,20],[223,38,217,14],[223,73,218,19,"route"],[223,80,217,14],[224,0,219,16,"params"],[224,18,219,16,"params"],[224,24,219,22],[224,58,220,21,"route"],[224,65,220,26],[224,66,220,27,"params"],[224,72,219,22],[224,74,221,21,"action"],[224,80,221,27],[224,81,221,28,"params"],[224,87,219,22],[225,0,217,14],[226,0,224,13],[228,0,226,12],[228,53,227,17,"state"],[228,58,226,12],[229,0,228,14,"isTransitioning"],[229,16,228,14,"isTransitioning"],[229,31,228,29],[229,33,229,16,"state"],[229,38,229,21],[229,39,229,22,"index"],[229,44,229,16],[229,49,229,32,"lastRouteIndex"],[229,63,229,16],[229,66,230,20,"action"],[229,72,230,26],[229,73,230,27,"immediate"],[229,82,230,20],[229,87,230,41],[229,91,229,16],[229,94,231,20,"undefined"],[229,103,226,12],[230,0,232,14,"index"],[230,16,232,14,"index"],[230,21,232,19],[230,23,232,21,"lastRouteIndex"],[230,37,226,12],[231,0,233,14,"routes"],[231,16,233,14,"routes"],[231,22,233,20],[231,24,233,14,"routes"],[232,0,226,12],[233,0,235,11],[234,0,236,9],[236,0,238,8],[236,14,238,12,"childRouter"],[236,26,238,8],[236,28,238,25],[237,0,239,10],[237,16,239,16,"childAction"],[237,27,239,27],[237,30,240,12,"action"],[237,36,240,18],[237,37,240,19,"action"],[237,43,240,12],[237,47,240,29,"NavigationActions"],[237,74,240,47,"init"],[237,78,240,29],[237,79,240,52],[238,0,240,54,"params"],[238,14,240,54,"params"],[238,20,240,60],[238,22,240,62,"action"],[238,28,240,68],[238,29,240,69,"params"],[239,0,240,52],[239,13,240,29],[239,14,239,10],[241,0,241,10,"route"],[241,12,241,10,"route"],[241,18,241,15],[242,0,242,12,"params"],[242,14,242,12,"params"],[242,20,242,18],[242,22,242,20,"action"],[242,28,242,26],[242,29,242,27,"params"],[243,0,241,15],[243,15,244,15,"childRouter"],[243,27,244,26],[243,28,244,27,"getStateForAction"],[243,45,244,15],[243,46,244,45,"childAction"],[243,57,244,15],[243,58,241,15],[244,0,245,12,"routeName"],[244,14,245,12,"routeName"],[244,23,245,21],[244,25,245,23,"action"],[244,31,245,29],[244,32,245,30,"routeName"],[244,41,241,15],[245,0,246,12,"key"],[245,14,246,12,"key"],[245,17,246,15],[245,19,246,17,"action"],[245,25,246,23],[245,26,246,24,"key"],[245,29,246,17],[245,33,246,31],[246,0,241,15],[246,14,241,10],[247,0,248,9],[247,11,238,8],[247,17,248,15],[248,0,249,10,"route"],[248,12,249,10,"route"],[248,18,249,15],[248,21,249,18],[249,0,250,12,"params"],[249,14,250,12,"params"],[249,20,250,18],[249,22,250,20,"action"],[249,28,250,26],[249,29,250,27,"params"],[249,35,249,18],[250,0,251,12,"routeName"],[250,14,251,12,"routeName"],[250,23,251,21],[250,25,251,23,"action"],[250,31,251,29],[250,32,251,30,"routeName"],[250,41,249,18],[251,0,252,12,"key"],[251,14,252,12,"key"],[251,17,252,15],[251,19,252,17,"action"],[251,25,252,23],[251,26,252,24,"key"],[251,29,252,17],[251,33,252,31],[252,0,249,18],[252,13,249,10],[253,0,254,9],[255,0,255,8],[255,49,256,13,"StateUtils"],[255,69,256,24,"push"],[255,73,256,13],[255,74,256,29,"state"],[255,79,256,13],[255,81,256,36,"route"],[255,87,256,13],[255,88,255,8],[256,0,257,10,"isTransitioning"],[256,12,257,10,"isTransitioning"],[256,27,257,25],[256,29,257,27,"action"],[256,35,257,33],[256,36,257,34,"immediate"],[256,45,257,27],[256,50,257,48],[257,0,255,8],[258,0,259,7],[258,9,188,6],[258,15,259,13],[258,19,260,8,"action"],[258,25,260,14],[258,26,260,15,"type"],[258,30,260,8],[258,35,260,24,"NavigationActions"],[258,62,260,42,"PUSH"],[258,66,260,8],[258,70,261,8,"childRouters"],[258,82,261,20],[258,83,261,21,"action"],[258,89,261,27],[258,90,261,28,"routeName"],[258,99,261,20],[258,100,261,8],[258,105,261,43,"undefined"],[258,114,259,13],[258,116,262,8],[259,0,266,8],[259,49,267,13,"state"],[259,54,266,8],[260,0,269,7],[262,0,272,6],[262,12,272,10,"behavesLikePushAction"],[262,33,272,31],[262,34,272,32,"action"],[262,40,272,31],[262,41,272,6],[262,43,272,41],[263,0,273,8],[263,14,273,14,"childRouterNames"],[263,30,273,30],[263,33,273,33,"Object"],[263,39,273,39],[263,40,273,40,"keys"],[263,44,273,33],[263,45,273,45,"childRouters"],[263,57,273,33],[263,58,273,8],[265,0,274,8],[265,15,274,13],[265,19,274,17,"i"],[265,20,274,18],[265,23,274,21],[265,24,274,8],[265,26,274,24,"i"],[265,27,274,25],[265,30,274,28,"childRouterNames"],[265,46,274,44],[265,47,274,45,"length"],[265,53,274,8],[265,55,274,53,"i"],[265,56,274,54],[265,58,274,8],[265,60,274,58],[266,0,275,10],[266,16,275,16,"childRouterName"],[266,31,275,31],[266,34,275,34,"childRouterNames"],[266,50,275,50],[266,51,275,51,"i"],[266,52,275,50],[266,53,275,10],[267,0,276,10],[267,16,276,16,"childRouter"],[267,29,276,27],[267,32,276,30,"childRouters"],[267,44,276,42],[267,45,276,43,"childRouterName"],[267,60,276,42],[267,61,276,10],[269,0,277,10],[269,16,277,14,"childRouter"],[269,29,277,10],[269,31,277,27],[270,0,279,12],[270,18,279,18,"initChildRoute"],[270,32,279,32],[270,35,279,35,"childRouter"],[270,48,279,46],[270,49,279,47,"getStateForAction"],[270,66,279,35],[270,67,280,14,"NavigationActions"],[270,94,280,32,"init"],[270,98,280,14],[270,100,279,35],[270,101,279,12],[272,0,283,12],[272,18,283,18,"navigatedChildRoute"],[272,37,283,37],[272,40,283,40,"childRouter"],[272,53,283,51],[272,54,283,52,"getStateForAction"],[272,71,283,40],[272,72,284,14,"action"],[272,78,283,40],[272,80,285,14,"initChildRoute"],[272,94,283,40],[272,95,283,12],[274,0,287,12],[274,18,287,16,"routeToPush"],[274,29,287,27],[274,32,287,30],[274,36,287,12],[276,0,288,12],[276,18,288,16,"navigatedChildRoute"],[276,37,288,35],[276,42,288,40],[276,46,288,12],[276,48,288,46],[277,0,290,14,"routeToPush"],[277,16,290,14,"routeToPush"],[277,27,290,25],[277,30,290,28,"initChildRoute"],[277,44,290,14],[278,0,291,13],[278,15,288,12],[278,21,291,19],[278,25,291,23,"navigatedChildRoute"],[278,44,291,42],[278,49,291,47,"initChildRoute"],[278,63,291,19],[278,65,291,63],[279,0,293,14,"routeToPush"],[279,16,293,14,"routeToPush"],[279,27,293,25],[279,30,293,28,"navigatedChildRoute"],[279,49,293,14],[280,0,294,13],[282,0,295,12],[282,18,295,16,"routeToPush"],[282,29,295,12],[282,31,295,29],[283,0,296,14],[283,20,296,20,"route"],[283,27,296,25],[283,62,297,19,"routeToPush"],[283,73,296,25],[284,0,298,16,"routeName"],[284,18,298,16,"routeName"],[284,27,298,25],[284,29,298,27,"childRouterName"],[284,44,296,25],[285,0,299,16,"key"],[285,18,299,16,"key"],[285,21,299,19],[285,23,299,21,"action"],[285,29,299,27],[285,30,299,28,"key"],[285,33,299,21],[285,37,299,35],[286,0,296,25],[286,18,296,14],[288,0,301,14],[288,23,301,21,"StateUtils"],[288,43,301,32,"push"],[288,47,301,21],[288,48,301,37,"state"],[288,53,301,21],[288,55,301,44,"route"],[288,62,301,21],[288,63,301,14],[289,0,302,13],[290,0,303,11],[291,0,304,9],[292,0,305,7],[294,0,308,6],[294,12,308,10,"action"],[294,18,308,16],[294,19,308,17,"type"],[294,23,308,10],[294,28,308,26,"NavigationActions"],[294,55,308,44,"POP_TO_TOP"],[294,65,308,6],[294,67,308,56],[295,0,311,8],[295,14,311,12,"action"],[295,20,311,18],[295,21,311,19,"key"],[295,24,311,12],[295,28,311,26,"state"],[295,33,311,31],[295,34,311,32,"key"],[295,37,311,26],[295,42,311,40,"action"],[295,48,311,46],[295,49,311,47,"key"],[295,52,311,8],[295,54,311,52],[296,0,312,10],[296,19,312,17,"state"],[296,24,312,10],[297,0,313,9],[299,0,317,8],[299,14,317,12,"state"],[299,19,317,17],[299,20,317,18,"index"],[299,25,317,12],[299,30,317,28],[299,31,317,8],[299,33,317,31],[300,0,318,10],[300,51,319,15,"state"],[300,56,318,10],[301,0,321,9],[301,11,317,8],[301,17,321,15],[302,0,322,10],[302,51,323,15,"state"],[302,56,322,10],[303,0,324,12,"isTransitioning"],[303,14,324,12,"isTransitioning"],[303,29,324,27],[303,31,324,29,"action"],[303,37,324,35],[303,38,324,36,"immediate"],[303,47,324,29],[303,52,324,50],[303,56,322,10],[304,0,325,12,"index"],[304,14,325,12,"index"],[304,19,325,17],[304,21,325,19],[304,22,322,10],[305,0,326,12,"routes"],[305,14,326,12,"routes"],[305,20,326,18],[305,22,326,20],[305,23,326,21,"state"],[305,28,326,26],[305,29,326,27,"routes"],[305,35,326,21],[305,36,326,34],[305,37,326,21],[305,38,326,20],[306,0,322,10],[307,0,328,9],[309,0,329,8],[309,17,329,15,"state"],[309,22,329,8],[310,0,330,7],[312,0,333,6],[312,12,333,10,"action"],[312,18,333,16],[312,19,333,17,"type"],[312,23,333,10],[312,28,333,26,"NavigationActions"],[312,55,333,44,"REPLACE"],[312,62,333,6],[312,64,333,53],[313,0,334,8],[313,14,334,14,"routeIndex"],[313,24,334,24],[313,27,334,27,"state"],[313,32,334,32],[313,33,334,33,"routes"],[313,39,334,27],[313,40,334,40,"findIndex"],[313,49,334,27],[313,50,334,50],[313,60,334,50,"r"],[313,61,334,51],[314,0,334,51],[314,19,334,55,"r"],[314,20,334,56],[314,21,334,57,"key"],[314,24,334,55],[314,29,334,65,"action"],[314,35,334,71],[314,36,334,72,"key"],[314,39,334,51],[315,0,334,51],[315,11,334,27],[315,12,334,8],[317,0,336,8],[317,14,336,12,"routeIndex"],[317,24,336,22],[317,29,336,27],[317,30,336,28],[317,31,336,8],[317,33,336,31],[318,0,337,10],[318,16,337,16,"childRouter"],[318,29,337,27],[318,32,337,30,"childRouters"],[318,44,337,42],[318,45,337,43,"action"],[318,51,337,49],[318,52,337,50,"routeName"],[318,61,337,42],[318,62,337,10],[319,0,338,10],[319,16,338,14,"childState"],[319,26,338,24],[319,29,338,27],[319,31,338,10],[321,0,339,10],[321,16,339,14,"childRouter"],[321,29,339,10],[321,31,339,27],[322,0,340,12],[322,18,340,18,"childAction"],[322,30,340,29],[322,33,341,14,"action"],[322,39,341,20],[322,40,341,21,"action"],[322,46,341,14],[322,50,342,14,"NavigationActions"],[322,77,342,32,"init"],[322,81,342,14],[322,82,342,37],[323,0,342,39,"params"],[323,16,342,39,"params"],[323,22,342,45],[323,24,342,47,"action"],[323,30,342,53],[323,31,342,54,"params"],[324,0,342,37],[324,15,342,14],[324,16,340,12],[326,0,343,12,"childState"],[326,14,343,12,"childState"],[326,24,343,22],[326,27,343,25,"childRouter"],[326,40,343,36],[326,41,343,37,"getStateForAction"],[326,58,343,25],[326,59,343,55,"childAction"],[326,71,343,25],[326,72,343,12],[327,0,344,11],[329,0,345,10],[329,16,345,16,"routes"],[329,23,345,22],[329,59,345,29,"state"],[329,64,345,34],[329,65,345,35,"routes"],[329,71,345,22],[329,72,345,10],[331,0,346,10,"routes"],[331,12,346,10,"routes"],[331,19,346,16],[331,20,346,17,"routeIndex"],[331,30,346,16],[331,31,346,10],[332,0,347,12,"params"],[332,14,347,12,"params"],[332,20,347,18],[332,22,347,20,"action"],[332,28,347,26],[332,29,347,27,"params"],[333,0,346,10],[333,15,349,15,"childState"],[333,25,346,10],[334,0,350,12,"routeName"],[334,14,350,12,"routeName"],[334,23,350,21],[334,25,350,23,"action"],[334,31,350,29],[334,32,350,30,"routeName"],[334,41,346,10],[335,0,351,12,"key"],[335,14,351,12,"key"],[335,17,351,15],[335,19,351,17,"action"],[335,25,351,23],[335,26,351,24,"newKey"],[335,32,351,17],[335,36,351,34],[336,0,346,10],[337,0,353,10],[337,51,353,22,"state"],[337,56,353,10],[338,0,353,29,"routes"],[338,14,353,29,"routes"],[338,20,353,35],[338,22,353,29,"routes"],[339,0,353,10],[340,0,354,9],[341,0,355,7],[343,0,358,6],[343,12,359,8,"action"],[343,18,359,14],[343,19,359,15,"type"],[343,23,359,8],[343,28,359,24,"NavigationActions"],[343,55,359,42,"COMPLETE_TRANSITION"],[343,74,359,8],[343,79,360,9,"action"],[343,85,360,15],[343,86,360,16,"key"],[343,89,360,9],[343,93,360,23],[343,97,360,9],[343,101,360,31,"action"],[343,107,360,37],[343,108,360,38,"key"],[343,111,360,31],[343,116,360,46,"state"],[343,121,360,51],[343,122,360,52,"key"],[343,125,359,8],[343,130,361,8,"state"],[343,135,361,13],[343,136,361,14,"isTransitioning"],[343,151,358,6],[343,153,362,8],[344,0,363,8],[344,49,364,13,"state"],[344,54,363,8],[345,0,365,10,"isTransitioning"],[345,12,365,10,"isTransitioning"],[345,27,365,25],[345,29,365,27],[346,0,363,8],[347,0,367,7],[349,0,369,6],[349,12,369,10,"action"],[349,18,369,16],[349,19,369,17,"type"],[349,23,369,10],[349,28,369,26,"NavigationActions"],[349,55,369,44,"SET_PARAMS"],[349,65,369,6],[349,67,369,56],[350,0,370,8],[350,14,370,14,"key"],[350,17,370,17],[350,20,370,20,"action"],[350,26,370,26],[350,27,370,27,"key"],[350,30,370,8],[351,0,371,8],[351,14,371,14,"lastRoute"],[351,23,371,23],[351,26,371,26,"state"],[351,31,371,31],[351,32,371,32,"routes"],[351,38,371,26],[351,39,371,39,"find"],[351,43,371,26],[351,44,371,44],[351,54,371,44,"route"],[351,59,371,49],[352,0,371,49],[352,19,371,53,"route"],[352,24,371,58],[352,25,371,59,"key"],[352,28,371,53],[352,33,371,67,"key"],[352,36,371,49],[353,0,371,49],[353,11,371,26],[353,12,371,8],[355,0,372,8],[355,14,372,12,"lastRoute"],[355,23,372,8],[355,25,372,23],[356,0,373,10],[356,16,373,16,"params"],[356,22,373,22],[356,57,374,15,"lastRoute"],[356,66,374,24],[356,67,374,25,"params"],[356,73,373,22],[356,75,375,15,"action"],[356,81,375,21],[356,82,375,22,"params"],[356,88,373,22],[356,89,373,10],[358,0,377,10],[358,16,377,16,"routes"],[358,24,377,22],[358,60,377,29,"state"],[358,65,377,34],[358,66,377,35,"routes"],[358,72,377,22],[358,73,377,10],[360,0,378,10,"routes"],[360,12,378,10,"routes"],[360,20,378,16],[360,21,378,17,"state"],[360,26,378,22],[360,27,378,23,"routes"],[360,33,378,17],[360,34,378,30,"indexOf"],[360,41,378,17],[360,42,378,38,"lastRoute"],[360,51,378,17],[360,52,378,16],[360,53,378,10],[360,88,379,15,"lastRoute"],[360,97,378,10],[361,0,380,12,"params"],[361,14,380,12,"params"],[361,20,380,18],[361,22,380,12,"params"],[362,0,378,10],[363,0,382,10],[363,51,383,15,"state"],[363,56,382,10],[364,0,384,12,"routes"],[364,14,384,12,"routes"],[364,20,384,18],[364,22,384,12,"routes"],[365,0,382,10],[366,0,386,9],[367,0,387,7],[369,0,389,6],[369,12,389,10,"action"],[369,18,389,16],[369,19,389,17,"type"],[369,23,389,10],[369,28,389,26,"NavigationActions"],[369,55,389,44,"RESET"],[369,60,389,6],[369,62,389,51],[370,0,391,8],[370,14,391,12,"action"],[370,20,391,18],[370,21,391,19,"key"],[370,24,391,12],[370,28,391,26],[370,32,391,12],[370,36,391,34,"action"],[370,42,391,40],[370,43,391,41,"key"],[370,46,391,34],[370,50,391,48,"state"],[370,55,391,53],[370,56,391,54,"key"],[370,59,391,8],[370,61,391,59],[371,0,394,10],[371,19,394,17,"state"],[371,24,394,10],[372,0,395,9],[374,0,396,8],[374,14,396,14,"newStackActions"],[374,29,396,29],[374,32,396,32,"action"],[374,38,396,38],[374,39,396,39,"actions"],[374,46,396,8],[375,0,398,8],[375,49,399,13,"state"],[375,54,398,8],[376,0,400,10,"routes"],[376,12,400,10,"routes"],[376,18,400,16],[376,20,400,18,"newStackActions"],[376,35,400,33],[376,36,400,34,"map"],[376,39,400,18],[376,40,400,38],[376,50,400,38,"newStackAction"],[376,64,400,52],[376,66,400,56],[377,0,401,12],[377,18,401,18,"router"],[377,24,401,24],[377,27,401,27,"childRouters"],[377,39,401,39],[377,40,401,40,"newStackAction"],[377,54,401,54],[377,55,401,55,"routeName"],[377,64,401,39],[377,65,401,12],[378,0,403,12],[378,18,403,16,"childState"],[378,28,403,26],[378,31,403,29],[378,33,403,12],[380,0,405,12],[380,18,405,16,"router"],[380,24,405,12],[380,26,405,24],[381,0,406,14],[381,20,406,20,"childAction"],[381,33,406,31],[381,36,407,16,"newStackAction"],[381,50,407,30],[381,51,407,31,"action"],[381,57,407,16],[381,61,408,16,"NavigationActions"],[381,88,408,34,"init"],[381,92,408,16],[381,93,408,39],[382,0,408,41,"params"],[382,18,408,41,"params"],[382,24,408,47],[382,26,408,49,"newStackAction"],[382,40,408,63],[382,41,408,64,"params"],[383,0,408,39],[383,17,408,16],[383,18,406,14],[385,0,410,14,"childState"],[385,16,410,14,"childState"],[385,26,410,24],[385,29,410,27,"router"],[385,35,410,33],[385,36,410,34,"getStateForAction"],[385,53,410,27],[385,54,410,52,"childAction"],[385,67,410,27],[385,68,410,14],[386,0,411,13],[388,0,413,12],[389,0,414,14,"params"],[389,16,414,14,"params"],[389,22,414,20],[389,24,414,22,"newStackAction"],[389,38,414,36],[389,39,414,37,"params"],[390,0,413,12],[390,17,415,17,"childState"],[390,27,413,12],[391,0,416,14,"routeName"],[391,16,416,14,"routeName"],[391,25,416,23],[391,27,416,25,"newStackAction"],[391,41,416,39],[391,42,416,40,"routeName"],[391,51,413,12],[392,0,417,14,"key"],[392,16,417,14,"key"],[392,19,417,17],[392,21,417,19,"newStackAction"],[392,35,417,33],[392,36,417,34,"key"],[392,39,417,19],[392,43,417,41],[393,0,413,12],[394,0,419,11],[394,13,400,18],[394,14,398,8],[395,0,420,10,"index"],[395,12,420,10,"index"],[395,17,420,15],[395,19,420,17,"action"],[395,25,420,23],[395,26,420,24,"index"],[396,0,398,8],[397,0,422,7],[399,0,424,6],[399,12,425,8,"action"],[399,18,425,14],[399,19,425,15,"type"],[399,23,425,8],[399,28,425,24,"NavigationActions"],[399,55,425,42,"BACK"],[399,59,425,8],[399,63,426,8,"action"],[399,69,426,14],[399,70,426,15,"type"],[399,74,426,8],[399,79,426,24,"NavigationActions"],[399,106,426,42,"POP"],[399,109,424,6],[399,111,427,8],[400,0,427,8],[400,14,428,16,"key"],[400,18,427,8],[400,21,428,38,"action"],[400,27,427,8],[400,28,428,16,"key"],[400,31,427,8],[401,0,427,8],[401,14,428,21,"n"],[401,15,427,8],[401,18,428,38,"action"],[401,24,427,8],[401,25,428,21,"n"],[401,26,427,8],[402,0,427,8],[402,14,428,24,"immediate"],[402,23,427,8],[402,26,428,38,"action"],[402,32,427,8],[402,33,428,24,"immediate"],[402,42,427,8],[403,0,429,8],[403,14,429,12,"backRouteIndex"],[403,28,429,26],[403,31,429,29,"state"],[403,36,429,34],[403,37,429,35,"index"],[403,42,429,8],[405,0,430,8],[405,14,430,12,"action"],[405,20,430,18],[405,21,430,19,"type"],[405,25,430,12],[405,30,430,28,"NavigationActions"],[405,57,430,46,"POP"],[405,60,430,12],[405,64,430,53,"n"],[405,65,430,54],[405,69,430,58],[405,73,430,8],[405,75,430,64],[406,0,433,10,"backRouteIndex"],[406,12,433,10,"backRouteIndex"],[406,26,433,24],[406,29,433,27,"Math"],[406,33,433,31],[406,34,433,32,"max"],[406,37,433,27],[406,38,433,36],[406,39,433,27],[406,41,433,39,"state"],[406,46,433,44],[406,47,433,45,"index"],[406,52,433,39],[406,55,433,53,"n"],[406,56,433,39],[406,59,433,57],[406,60,433,27],[406,61,433,10],[407,0,434,9],[407,11,430,8],[407,17,434,15],[407,21,434,19,"key"],[407,25,434,15],[407,27,434,24],[408,0,435,10],[408,16,435,16,"backRoute"],[408,25,435,25],[408,28,435,28,"state"],[408,33,435,33],[408,34,435,34,"routes"],[408,40,435,28],[408,41,435,41,"find"],[408,45,435,28],[408,46,435,46],[408,56,435,46,"route"],[408,61,435,51],[409,0,435,51],[409,21,435,55,"route"],[409,26,435,60],[409,27,435,61,"key"],[409,30,435,55],[409,35,435,69,"key"],[409,39,435,51],[410,0,435,51],[410,13,435,28],[410,14,435,10],[411,0,436,10,"backRouteIndex"],[411,12,436,10,"backRouteIndex"],[411,26,436,24],[411,29,436,27,"state"],[411,34,436,32],[411,35,436,33,"routes"],[411,41,436,27],[411,42,436,40,"indexOf"],[411,49,436,27],[411,50,436,48,"backRoute"],[411,59,436,27],[411,60,436,10],[412,0,437,9],[414,0,439,8],[414,14,439,12,"backRouteIndex"],[414,28,439,26],[414,31,439,29],[414,32,439,8],[414,34,439,32],[415,0,440,10],[415,51,441,15,"state"],[415,56,440,10],[416,0,442,12,"routes"],[416,14,442,12,"routes"],[416,20,442,18],[416,22,442,20,"state"],[416,27,442,25],[416,28,442,26,"routes"],[416,34,442,20],[416,35,442,33,"slice"],[416,40,442,20],[416,41,442,39],[416,42,442,20],[416,44,442,42,"backRouteIndex"],[416,58,442,20],[416,59,440,10],[417,0,443,12,"index"],[417,14,443,12,"index"],[417,19,443,17],[417,21,443,19,"backRouteIndex"],[417,35,443,33],[417,38,443,36],[417,39,440,10],[418,0,444,12,"isTransitioning"],[418,14,444,12,"isTransitioning"],[418,29,444,27],[418,31,444,29,"immediate"],[418,40,444,38],[418,45,444,43],[419,0,440,10],[420,0,446,9],[420,11,439,8],[420,17,446,15],[420,21,447,10,"backRouteIndex"],[420,35,447,24],[420,40,447,29],[420,41,447,10],[420,45,448,10,"action"],[420,51,448,16],[420,52,448,17,"type"],[420,56,448,10],[420,61,448,26,"NavigationActions"],[420,88,448,44,"POP"],[420,91,446,15],[420,93,449,10],[421,0,450,10],[421,51,451,15,"state"],[421,56,450,10],[422,0,453,9],[423,0,454,7],[425,0,455,6],[425,15,455,13,"state"],[425,20,455,6],[426,0,456,5],[426,7,142,9],[427,0,458,4,"getPathAndParamsForState"],[427,6,458,4,"getPathAndParamsForState"],[427,30,142,9],[427,66,458,29,"state"],[427,71,142,9],[427,73,458,36],[428,0,459,6],[428,12,459,12,"route"],[428,17,459,17],[428,20,459,20,"state"],[428,25,459,25],[428,26,459,26,"routes"],[428,32,459,20],[428,33,459,33,"state"],[428,38,459,38],[428,39,459,39,"index"],[428,44,459,20],[428,45,459,6],[429,0,460,6],[429,12,460,12,"routeName"],[429,21,460,21],[429,24,460,24,"route"],[429,29,460,29],[429,30,460,30,"routeName"],[429,39,460,6],[430,0,461,6],[430,12,461,12,"screen"],[430,18,461,18],[430,21,461,21],[430,57,461,43,"routeConfigs"],[430,69,461,21],[430,71,461,57,"routeName"],[430,80,461,21],[430,81,461,6],[431,0,462,6],[431,12,462,12,"subPath"],[431,19,462,19],[431,22,462,22,"pathsByRouteNames"],[431,39,462,39],[431,40,462,40,"routeName"],[431,49,462,39],[431,50,462,22],[431,51,462,51,"toPath"],[431,57,462,22],[431,58,462,58,"route"],[431,63,462,63],[431,64,462,64,"params"],[431,70,462,22],[431,71,462,6],[432,0,463,6],[432,12,463,10,"path"],[432,16,463,14],[432,19,463,17,"subPath"],[432,26,463,6],[433,0,464,6],[433,12,464,10,"params"],[433,18,464,16],[433,21,464,19,"route"],[433,26,464,24],[433,27,464,25,"params"],[433,33,464,6],[435,0,465,6],[435,12,465,10,"screen"],[435,18,465,16],[435,22,465,20,"screen"],[435,28,465,26],[435,29,465,27,"router"],[435,35,465,6],[435,37,465,35],[436,0,466,8],[436,14,466,14,"stateRoute"],[436,24,466,24],[436,27,466,27,"route"],[436,32,466,8],[437,0,469,8],[437,14,469,14,"child"],[437,19,469,19],[437,22,469,22,"screen"],[437,28,469,28],[437,29,469,29,"router"],[437,35,469,22],[437,36,469,36,"getPathAndParamsForState"],[437,60,469,22],[437,61,469,61,"stateRoute"],[437,71,469,22],[437,72,469,8],[438,0,470,8,"path"],[438,10,470,8,"path"],[438,14,470,12],[438,17,470,15,"subPath"],[438,24,470,22],[438,27,470,28,"subPath"],[438,34,470,22],[438,43,470,39,"child"],[438,48,470,44],[438,49,470,45,"path"],[438,53,470,22],[438,56,470,54,"child"],[438,61,470,59],[438,62,470,60,"path"],[438,66,470,8],[439,0,471,8,"params"],[439,10,471,8,"params"],[439,16,471,14],[439,19,471,17,"child"],[439,24,471,22],[439,25,471,23,"params"],[439,31,471,17],[439,66,471,37,"params"],[439,72,471,17],[439,74,471,48,"child"],[439,79,471,53],[439,80,471,54,"params"],[439,86,471,17],[439,90,471,65,"params"],[439,96,471,8],[440,0,472,7],[442,0,473,6],[442,15,473,13],[443,0,474,8,"path"],[443,10,474,8,"path"],[443,14,474,12],[443,16,474,8,"path"],[443,20,473,13],[444,0,475,8,"params"],[444,10,475,8,"params"],[444,16,475,14],[444,18,475,8,"params"],[445,0,473,13],[445,9,473,6],[446,0,477,5],[446,7,142,9],[447,0,479,4,"getActionForPathAndParams"],[447,6,479,4,"getActionForPathAndParams"],[447,31,142,9],[447,68,479,30,"pathToResolve"],[447,81,142,9],[447,83,479,45,"inputParams"],[447,94,142,9],[447,96,479,58],[448,0,482,6],[448,12,482,10],[448,13,482,11,"pathToResolve"],[448,26,482,6],[448,28,482,26],[449,0,483,8],[449,17,483,15,"NavigationActions"],[449,44,483,33,"navigate"],[449,52,483,15],[449,53,483,42],[450,0,484,10,"routeName"],[450,12,484,10,"routeName"],[450,21,484,19],[450,23,484,21,"initialRouteName"],[451,0,483,42],[451,11,483,15],[451,12,483,8],[452,0,486,7],[454,0,479,58],[454,35,488,47,"pathToResolve"],[454,48,488,60],[454,49,488,61,"split"],[454,54,488,47],[454,55,488,67],[454,58,488,47],[454,59,479,58],[455,0,479,58],[456,0,479,58],[456,12,488,13,"pathNameToResolve"],[456,29,479,58],[457,0,479,58],[457,12,488,32,"queryString"],[457,23,479,58],[459,0,492,6],[459,12,492,10,"matchedRouteName"],[459,28,492,6],[460,0,493,6],[460,12,493,10,"pathMatch"],[460,21,493,6],[461,0,494,6],[461,12,494,10,"pathMatchKeys"],[461,25,494,6],[463,0,497,6],[463,29,497,38,"paths"],[463,34,497,6],[463,194,497,45],[464,0,497,45],[466,0,497,45],[467,0,497,45],[468,0,497,45],[469,0,497,45],[470,0,497,45],[471,0,497,45],[472,0,497,45],[473,0,497,45],[475,0,497,45],[477,0,497,45],[479,0,497,45],[479,14,497,18,"routeName"],[479,24,497,45],[480,0,497,45],[480,14,497,29,"path"],[480,19,497,45],[481,0,497,45],[481,14,498,16,"re"],[481,16,497,45],[481,19,498,29,"path"],[481,24,497,45],[481,25,498,16,"re"],[481,27,497,45],[482,0,497,45],[482,14,498,20,"keys"],[482,18,497,45],[482,21,498,29,"path"],[482,26,497,45],[482,27,498,20,"keys"],[482,31,497,45],[483,0,499,8,"pathMatch"],[483,10,499,8,"pathMatch"],[483,19,499,17],[483,22,499,20,"re"],[483,24,499,22],[483,25,499,23,"exec"],[483,29,499,20],[483,30,499,28,"pathNameToResolve"],[483,47,499,20],[483,48,499,8],[485,0,500,8],[485,14,500,12,"pathMatch"],[485,23,500,21],[485,27,500,25,"pathMatch"],[485,36,500,34],[485,37,500,35,"length"],[485,43,500,8],[485,45,500,43],[486,0,501,10,"pathMatchKeys"],[486,12,501,10,"pathMatchKeys"],[486,25,501,23],[486,28,501,26,"keys"],[486,32,501,10],[487,0,502,10,"matchedRouteName"],[487,12,502,10,"matchedRouteName"],[487,28,502,26],[487,31,502,29,"routeName"],[487,41,502,10],[488,0,503,10],[489,0,504,9],[490,0,505,7],[492,0,508,6],[492,12,508,10],[492,13,508,11,"matchedRouteName"],[492,29,508,6],[492,31,508,29],[493,0,511,8],[493,14,511,12],[493,15,511,13,"pathToResolve"],[493,28,511,8],[493,30,511,28],[494,0,512,10],[494,19,512,17,"NavigationActions"],[494,46,512,35,"navigate"],[494,54,512,17],[494,55,512,44],[495,0,513,12,"routeName"],[495,14,513,12,"routeName"],[495,23,513,21],[495,25,513,23,"initialRouteName"],[496,0,512,44],[496,13,512,17],[496,14,512,10],[497,0,515,9],[499,0,516,8],[499,17,516,15],[499,21,516,8],[500,0,517,7],[502,0,523,6],[502,12,523,10,"nestedAction"],[502,24,523,6],[503,0,524,6],[503,12,524,10,"nestedQueryString"],[503,29,524,27],[503,32,524,30,"queryString"],[503,43,524,41],[503,46,524,44],[503,52,524,50,"queryString"],[503,63,524,41],[503,66,524,64],[503,68,524,6],[505,0,525,6],[505,12,525,10,"childRouters"],[505,24,525,22],[505,25,525,23,"matchedRouteName"],[505,41,525,22],[505,42,525,6],[505,44,525,42],[506,0,526,8,"nestedAction"],[506,10,526,8,"nestedAction"],[506,22,526,20],[506,25,526,23,"childRouters"],[506,37,526,35],[506,38,526,36,"matchedRouteName"],[506,54,526,35],[506,55,526,23],[506,56,526,54,"getActionForPathAndParams"],[506,81,526,23],[506,82,527,10,"pathMatch"],[506,91,527,19],[506,92,527,20,"slice"],[506,97,527,10],[506,98,527,26,"pathMatchKeys"],[506,111,527,39],[506,112,527,40,"length"],[506,118,527,10],[506,120,527,48,"join"],[506,124,527,10],[506,125,527,53],[506,128,527,10],[506,132,527,60,"nestedQueryString"],[506,149,526,23],[506,150,526,8],[508,0,529,8],[508,14,529,12],[508,15,529,13,"nestedAction"],[508,27,529,8],[508,29,529,27],[509,0,530,10],[509,19,530,17],[509,23,530,10],[510,0,531,9],[511,0,532,7],[513,0,536,6],[513,12,536,12,"queryParams"],[513,23,536,23],[513,26,536,26],[513,27,536,27,"isEmpty"],[513,34,536,34],[513,35,536,35,"inputParams"],[513,46,536,34],[513,47,536,26],[513,50,537,10,"inputParams"],[513,61,536,26],[513,64,538,10],[513,65,538,11,"queryString"],[513,76,538,22],[513,80,538,26],[513,82,538,10],[513,84,538,30,"split"],[513,89,538,10],[513,90,538,36],[513,93,538,10],[513,95,538,41,"reduce"],[513,101,538,10],[513,102,538,48],[513,112,538,49,"result"],[513,118,538,48],[513,120,538,57,"item"],[513,124,538,48],[513,126,538,66],[514,0,539,12],[514,14,539,16,"item"],[514,18,539,20],[514,23,539,25],[514,25,539,12],[514,27,539,29],[515,0,540,14],[515,16,540,20,"nextResult"],[515,26,540,30],[515,29,540,33,"result"],[515,35,540,39],[515,39,540,43],[515,41,540,14],[517,0,539,29],[517,30,541,35,"item"],[517,34,541,39],[517,35,541,40,"split"],[517,40,541,35],[517,41,541,46],[517,44,541,35],[517,45,539,29],[518,0,539,29],[519,0,539,29],[519,16,541,21,"key"],[519,19,539,29],[520,0,539,29],[520,16,541,26,"value"],[520,21,539,29],[522,0,542,14,"nextResult"],[522,12,542,14,"nextResult"],[522,22,542,24],[522,23,542,25,"key"],[522,26,542,24],[522,27,542,14],[522,30,542,32,"value"],[522,35,542,14],[523,0,543,14],[523,19,543,21,"nextResult"],[523,29,543,14],[524,0,544,13],[526,0,545,12],[526,17,545,19,"result"],[526,23,545,12],[527,0,546,11],[527,9,538,10],[527,11,546,13],[527,15,538,10],[527,16,536,6],[528,0,550,6],[528,12,550,12,"params"],[528,18,550,18],[528,21,550,21,"pathMatch"],[528,30,550,30],[528,31,550,31,"slice"],[528,36,550,21],[528,37,550,37],[528,38,550,21],[528,40,550,40,"reduce"],[528,46,550,21],[528,47,550,47],[528,57,550,48,"result"],[528,63,550,47],[528,65,550,56,"matchResult"],[528,76,550,47],[528,78,550,69,"i"],[528,79,550,47],[528,81,550,75],[529,0,551,8],[529,14,551,14,"key"],[529,17,551,17],[529,20,551,20,"pathMatchKeys"],[529,33,551,33],[529,34,551,34,"i"],[529,35,551,33],[529,36,551,8],[531,0,552,8],[531,14,552,12,"key"],[531,17,552,15],[531,18,552,16,"asterisk"],[531,26,552,12],[531,30,552,28],[531,31,552,29,"key"],[531,34,552,8],[531,36,552,34],[532,0,553,10],[532,19,553,17,"result"],[532,25,553,10],[533,0,554,9],[535,0,555,8],[535,14,555,14,"nextResult"],[535,24,555,24],[535,27,555,27,"result"],[535,33,555,33],[535,37,555,37],[535,39,555,8],[536,0,556,8],[536,14,556,14,"paramName"],[536,23,556,23],[536,26,556,26,"key"],[536,29,556,29],[536,30,556,30,"name"],[536,34,556,8],[537,0,558,8],[537,14,558,12,"decodedMatchResult"],[537,32,558,8],[539,0,559,8],[539,14,559,12],[540,0,560,10,"decodedMatchResult"],[540,12,560,10,"decodedMatchResult"],[540,30,560,28],[540,33,560,31,"decodeURIComponent"],[540,51,560,49],[540,52,560,50,"matchResult"],[540,63,560,49],[540,64,560,10],[541,0,561,9],[541,11,559,8],[541,12,561,10],[541,19,561,17,"e"],[541,20,561,10],[541,22,561,20],[541,23,563,9],[543,0,565,8,"nextResult"],[543,10,565,8,"nextResult"],[543,20,565,18],[543,21,565,19,"paramName"],[543,30,565,18],[543,31,565,8],[543,34,565,32,"decodedMatchResult"],[543,52,565,50],[543,56,565,54,"matchResult"],[543,67,565,8],[544,0,566,8],[544,17,566,15,"nextResult"],[544,27,566,8],[545,0,567,7],[545,9,550,21],[545,11,567,9,"queryParams"],[545,22,550,21],[545,23,550,6],[546,0,569,6],[546,15,569,13,"NavigationActions"],[546,42,569,31,"navigate"],[546,50,569,13],[547,0,570,8,"routeName"],[547,10,570,8,"routeName"],[547,19,570,17],[547,21,570,19,"matchedRouteName"],[548,0,569,13],[548,11,571,12,"params"],[548,17,571,18],[548,20,571,21],[549,0,571,23,"params"],[549,10,571,23,"params"],[549,16,571,29],[549,18,571,23,"params"],[550,0,571,21],[550,9,571,18],[550,12,571,34],[550,14,569,13],[550,16,572,12,"nestedAction"],[550,28,572,24],[550,31,572,27],[551,0,572,29,"action"],[551,10,572,29,"action"],[551,16,572,35],[551,18,572,37,"nestedAction"],[552,0,572,27],[552,9,572,24],[552,12,572,54],[552,14,569,13],[552,16,569,6],[553,0,574,5],[553,7,142,9],[554,0,576,4,"getScreenOptions"],[554,6,576,4,"getScreenOptions"],[554,22,576,20],[554,24,576,22],[554,57,577,6,"routeConfigs"],[554,69,576,22],[554,71,578,6,"stackConfig"],[554,82,578,17],[554,83,578,18,"navigationOptions"],[554,100,576,22],[554,101,142,9],[555,0,581,4,"getScreenConfig"],[555,6,581,4,"getScreenConfig"],[555,21,581,19],[555,23,581,21,"getScreenConfigDeprecated"],[556,0,142,9],[556,5,142,2],[557,0,583,1],[557,3]]},"type":"js/module"}]}