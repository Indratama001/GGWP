{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"../utils/invariant","data":{"isAsync":false}},{"name":"./getScreenForRouteName","data":{"isAsync":false}},{"name":"./createConfigGetter","data":{"isAsync":false}},{"name":"../NavigationActions","data":{"isAsync":false}},{"name":"./validateRouteConfigMap","data":{"isAsync":false}},{"name":"./getScreenConfigDeprecated","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../utils/invariant\"));\n\n  var _getScreenForRouteName = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./getScreenForRouteName\"));\n\n  var _createConfigGetter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./createConfigGetter\"));\n\n  var _NavigationActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../NavigationActions\"));\n\n  var _validateRouteConfigMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./validateRouteConfigMap\"));\n\n  var _getScreenConfigDeprecated = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./getScreenConfigDeprecated\"));\n\n  function childrenUpdateWithoutSwitchingIndex(actionType) {\n    return [_NavigationActions.default.SET_PARAMS, _NavigationActions.default.COMPLETE_TRANSITION].includes(actionType);\n  }\n\n  var _default = function _default(routeConfigs) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _validateRouteConfigMap.default)(routeConfigs);\n    var order = config.order || Object.keys(routeConfigs);\n    var paths = config.paths || {};\n    var initialRouteParams = config.initialRouteParams;\n    var initialRouteName = config.initialRouteName || order[0];\n    var backBehavior = config.backBehavior || 'none';\n    var shouldBackNavigateToInitialRoute = backBehavior === 'initialRoute';\n    var resetOnBlur = config.hasOwnProperty('resetOnBlur') ? config.resetOnBlur : true;\n    var initialRouteIndex = order.indexOf(initialRouteName);\n    var childRouters = {};\n    order.forEach(function (routeName) {\n      var routeConfig = routeConfigs[routeName];\n      paths[routeName] = typeof routeConfig.path === 'string' ? routeConfig.path : routeName;\n      childRouters[routeName] = null;\n      var screen = (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n\n      if (screen.router) {\n        childRouters[routeName] = screen.router;\n      }\n    });\n\n    if (initialRouteIndex === -1) {\n      throw new Error(\"Invalid initialRouteName '\" + initialRouteName + \"'.\" + (\"Should be one of \" + order.map(function (n) {\n        return \"\\\"\" + n + \"\\\"\";\n      }).join(', ')));\n    }\n\n    function resetChildRoute(routeName) {\n      var params = routeName === initialRouteName ? initialRouteParams : undefined;\n      var childRouter = childRouters[routeName];\n\n      if (childRouter) {\n        var childAction = _NavigationActions.default.init();\n\n        return (0, _objectSpread2.default)({}, childRouter.getStateForAction(childAction), {\n          key: routeName,\n          routeName: routeName,\n          params: params\n        });\n      }\n\n      return {\n        key: routeName,\n        routeName: routeName,\n        params: params\n      };\n    }\n\n    return {\n      getInitialState: function getInitialState() {\n        var routes = order.map(resetChildRoute);\n        return {\n          routes: routes,\n          index: initialRouteIndex,\n          isTransitioning: false\n        };\n      },\n      getNextState: function getNextState(prevState, possibleNextState) {\n        var nextState;\n\n        if (prevState.index !== possibleNextState.index && resetOnBlur) {\n          var prevRouteName = prevState.routes[prevState.index].routeName;\n          var nextRoutes = (0, _toConsumableArray2.default)(possibleNextState.routes);\n          nextRoutes[prevState.index] = resetChildRoute(prevRouteName);\n          return (0, _objectSpread2.default)({}, possibleNextState, {\n            routes: nextRoutes\n          });\n        } else {\n          nextState = possibleNextState;\n        }\n\n        return nextState;\n      },\n      getStateForAction: function getStateForAction(action, inputState) {\n        var prevState = inputState ? (0, _objectSpread2.default)({}, inputState) : inputState;\n        var state = inputState || this.getInitialState();\n        var activeChildIndex = state.index;\n\n        if (action.type === _NavigationActions.default.INIT) {\n          var params = action.params;\n\n          if (params) {\n            state.routes = state.routes.map(function (route) {\n              return (0, _objectSpread2.default)({}, route, {\n                params: (0, _objectSpread2.default)({}, route.params, params, route.routeName === initialRouteName ? initialRouteParams : null)\n              });\n            });\n          }\n        }\n\n        var activeChildLastState = state.routes[state.index];\n        var activeChildRouter = childRouters[order[state.index]];\n\n        if (activeChildRouter) {\n          var activeChildState = activeChildRouter.getStateForAction(action, activeChildLastState);\n\n          if (!activeChildState && inputState) {\n            return null;\n          }\n\n          if (activeChildState && activeChildState !== activeChildLastState) {\n            var _routes = (0, _toConsumableArray2.default)(state.routes);\n\n            _routes[state.index] = activeChildState;\n            return this.getNextState(prevState, (0, _objectSpread2.default)({}, state, {\n              routes: _routes\n            }));\n          }\n        }\n\n        if (backBehavior !== 'none') {\n          var isBackEligible = action.key == null || action.key === activeChildLastState.key;\n\n          if (action.type === _NavigationActions.default.BACK) {\n            if (isBackEligible && shouldBackNavigateToInitialRoute) {\n              activeChildIndex = initialRouteIndex;\n            } else {\n              return state;\n            }\n          }\n        }\n\n        var didNavigate = false;\n\n        if (action.type === _NavigationActions.default.NAVIGATE) {\n          var navigateAction = action;\n          didNavigate = !!order.find(function (childId, i) {\n            if (childId === navigateAction.routeName) {\n              activeChildIndex = i;\n              return true;\n            }\n\n            return false;\n          });\n\n          if (didNavigate) {\n            var childState = state.routes[activeChildIndex];\n            var newChildState;\n            var childRouter = childRouters[action.routeName];\n\n            if (action.action) {\n              newChildState = childRouter ? childRouter.getStateForAction(action.action, childState) : null;\n            } else if (!childRouter && action.params) {\n              newChildState = (0, _objectSpread2.default)({}, childState, {\n                params: (0, _objectSpread2.default)({}, childState.params || {}, action.params)\n              });\n            }\n\n            if (newChildState && newChildState !== childState) {\n              var _routes2 = (0, _toConsumableArray2.default)(state.routes);\n\n              _routes2[activeChildIndex] = newChildState;\n              return this.getNextState(prevState, (0, _objectSpread2.default)({}, state, {\n                routes: _routes2,\n                index: activeChildIndex\n              }));\n            }\n          }\n        }\n\n        if (action.type === _NavigationActions.default.SET_PARAMS) {\n          var key = action.key;\n          var lastRoute = state.routes.find(function (route) {\n            return route.key === key;\n          });\n\n          if (lastRoute) {\n            var _params = (0, _objectSpread2.default)({}, lastRoute.params, action.params);\n\n            var _routes3 = (0, _toConsumableArray2.default)(state.routes);\n\n            _routes3[state.routes.indexOf(lastRoute)] = (0, _objectSpread2.default)({}, lastRoute, {\n              params: _params\n            });\n            return this.getNextState(prevState, (0, _objectSpread2.default)({}, state, {\n              routes: _routes3\n            }));\n          }\n        }\n\n        if (activeChildIndex !== state.index) {\n          return this.getNextState(prevState, (0, _objectSpread2.default)({}, state, {\n            index: activeChildIndex\n          }));\n        } else if (didNavigate && !inputState) {\n          return state;\n        } else if (didNavigate) {\n          return null;\n        }\n\n        var index = state.index;\n        var routes = state.routes;\n        order.find(function (childId, i) {\n          var childRouter = childRouters[childId];\n\n          if (i === index) {\n            return false;\n          }\n\n          var childState = routes[i];\n\n          if (childRouter) {\n            childState = childRouter.getStateForAction(action, childState);\n          }\n\n          if (!childState) {\n            index = i;\n            return true;\n          }\n\n          if (childState !== routes[i]) {\n            routes = (0, _toConsumableArray2.default)(routes);\n            routes[i] = childState;\n            index = i;\n            return true;\n          }\n\n          return false;\n        });\n\n        if (childrenUpdateWithoutSwitchingIndex(action.type)) {\n          index = state.index;\n        }\n\n        if (index !== state.index || routes !== state.routes) {\n          return this.getNextState(prevState, (0, _objectSpread2.default)({}, state, {\n            index: index,\n            routes: routes\n          }));\n        }\n\n        return state;\n      },\n      getComponentForState: function getComponentForState(state) {\n        var routeName = state.routes[state.index].routeName;\n        (0, _invariant.default)(routeName, \"There is no route defined for index \" + state.index + \". Check that\\n        that you passed in a navigation state with a valid tab/screen index.\");\n        var childRouter = childRouters[routeName];\n\n        if (childRouter) {\n          return childRouter.getComponentForState(state.routes[state.index]);\n        }\n\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getComponentForRouteName: function getComponentForRouteName(routeName) {\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getPathAndParamsForState: function getPathAndParamsForState(state) {\n        var route = state.routes[state.index];\n        var routeName = order[state.index];\n        var subPath = paths[routeName];\n        var screen = (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n        var path = subPath;\n        var params = route.params;\n\n        if (screen && screen.router) {\n          var stateRoute = route;\n          var child = screen.router.getPathAndParamsForState(stateRoute);\n          path = subPath ? subPath + \"/\" + child.path : child.path;\n          params = child.params ? (0, _objectSpread2.default)({}, params, child.params) : params;\n        }\n\n        return {\n          path: path,\n          params: params\n        };\n      },\n      getActionForPathAndParams: function getActionForPathAndParams(path, params) {\n        return order.map(function (childId) {\n          var parts = path.split('/');\n          var pathToTest = paths[childId];\n\n          if (parts[0] === pathToTest) {\n            var childRouter = childRouters[childId];\n\n            var action = _NavigationActions.default.navigate({\n              routeName: childId\n            });\n\n            if (childRouter && childRouter.getActionForPathAndParams) {\n              action.action = childRouter.getActionForPathAndParams(parts.slice(1).join('/'), params);\n            } else if (params) {\n              action.params = params;\n            }\n\n            return action;\n          }\n\n          return null;\n        }).find(function (action) {\n          return !!action;\n        }) || order.map(function (childId) {\n          var childRouter = childRouters[childId];\n          return childRouter && childRouter.getActionForPathAndParams(path, params);\n        }).find(function (action) {\n          return !!action;\n        }) || null;\n      },\n      getScreenOptions: (0, _createConfigGetter.default)(routeConfigs, config.navigationOptions),\n      getScreenConfig: _getScreenConfigDeprecated.default\n    };\n  };\n\n  exports.default = _default;\n});","map":[[13,0,1,0],[15,0,2,0],[17,0,3,0],[19,0,5,0],[21,0,6,0],[23,0,7,0],[25,0,9,0],[25,11,9,9,"childrenUpdateWithoutSwitchingIndex"],[25,46,9,0],[25,47,9,45,"actionType"],[25,57,9,0],[25,59,9,57],[26,0,10,2],[26,11,10,9],[26,12,11,4,"NavigationActions"],[26,39,11,22,"SET_PARAMS"],[26,49,10,9],[26,51,12,4,"NavigationActions"],[26,78,12,22,"COMPLETE_TRANSITION"],[26,97,10,9],[26,99,13,4,"includes"],[26,107,10,9],[26,108,13,13,"actionType"],[26,118,10,9],[26,119,10,2],[27,0,14,1],[29,17,16,15],[29,35,16,16,"routeConfigs"],[29,47,16,15],[29,49,16,46],[30,0,16,46],[30,8,16,30,"config"],[30,14,16,46],[30,85,16,39],[30,87,16,46],[31,0,18,2],[31,41,18,25,"routeConfigs"],[31,53,18,2],[32,0,20,2],[32,8,20,8,"order"],[32,13,20,13],[32,16,20,16,"config"],[32,22,20,22],[32,23,20,23,"order"],[32,28,20,16],[32,32,20,32,"Object"],[32,38,20,38],[32,39,20,39,"keys"],[32,43,20,32],[32,44,20,44,"routeConfigs"],[32,56,20,32],[32,57,20,2],[33,0,21,2],[33,8,21,8,"paths"],[33,13,21,13],[33,16,21,16,"config"],[33,22,21,22],[33,23,21,23,"paths"],[33,28,21,16],[33,32,21,32],[33,34,21,2],[34,0,22,2],[34,8,22,8,"initialRouteParams"],[34,26,22,26],[34,29,22,29,"config"],[34,35,22,35],[34,36,22,36,"initialRouteParams"],[34,54,22,2],[35,0,23,2],[35,8,23,8,"initialRouteName"],[35,24,23,24],[35,27,23,27,"config"],[35,33,23,33],[35,34,23,34,"initialRouteName"],[35,50,23,27],[35,54,23,54,"order"],[35,59,23,59],[35,60,23,60],[35,61,23,59],[35,62,23,2],[36,0,24,2],[36,8,24,8,"backBehavior"],[36,20,24,20],[36,23,24,23,"config"],[36,29,24,29],[36,30,24,30,"backBehavior"],[36,42,24,23],[36,46,24,46],[36,52,24,2],[37,0,25,2],[37,8,25,8,"shouldBackNavigateToInitialRoute"],[37,40,25,40],[37,43,25,43,"backBehavior"],[37,55,25,55],[37,60,25,60],[37,74,25,2],[38,0,26,2],[38,8,26,8,"resetOnBlur"],[38,19,26,19],[38,22,26,22,"config"],[38,28,26,28],[38,29,26,29,"hasOwnProperty"],[38,43,26,22],[38,44,26,44],[38,57,26,22],[38,61,27,6,"config"],[38,67,27,12],[38,68,27,13,"resetOnBlur"],[38,79,26,22],[38,82,28,6],[38,86,26,2],[39,0,29,2],[39,8,29,8,"initialRouteIndex"],[39,25,29,25],[39,28,29,28,"order"],[39,33,29,33],[39,34,29,34,"indexOf"],[39,41,29,28],[39,42,29,42,"initialRouteName"],[39,58,29,28],[39,59,29,2],[40,0,30,2],[40,8,30,8,"childRouters"],[40,20,30,20],[40,23,30,23],[40,25,30,2],[41,0,32,2,"order"],[41,4,32,2,"order"],[41,9,32,7],[41,10,32,8,"forEach"],[41,17,32,2],[41,18,32,16],[41,28,32,16,"routeName"],[41,37,32,25],[41,39,32,29],[42,0,33,4],[42,10,33,10,"routeConfig"],[42,21,33,21],[42,24,33,24,"routeConfigs"],[42,36,33,36],[42,37,33,37,"routeName"],[42,46,33,36],[42,47,33,4],[43,0,34,4,"paths"],[43,6,34,4,"paths"],[43,11,34,9],[43,12,34,10,"routeName"],[43,21,34,9],[43,22,34,4],[43,25,35,6],[43,32,35,13,"routeConfig"],[43,43,35,24],[43,44,35,25,"path"],[43,48,35,6],[43,53,35,34],[43,61,35,6],[43,64,35,45,"routeConfig"],[43,75,35,56],[43,76,35,57,"path"],[43,80,35,6],[43,83,35,64,"routeName"],[43,92,34,4],[44,0,36,4,"childRouters"],[44,6,36,4,"childRouters"],[44,18,36,16],[44,19,36,17,"routeName"],[44,28,36,16],[44,29,36,4],[44,32,36,30],[44,36,36,4],[45,0,37,4],[45,10,37,10,"screen"],[45,16,37,16],[45,19,37,19],[45,55,37,41,"routeConfigs"],[45,67,37,19],[45,69,37,55,"routeName"],[45,78,37,19],[45,79,37,4],[47,0,38,4],[47,10,38,8,"screen"],[47,16,38,14],[47,17,38,15,"router"],[47,23,38,4],[47,25,38,23],[48,0,39,6,"childRouters"],[48,8,39,6,"childRouters"],[48,20,39,18],[48,21,39,19,"routeName"],[48,30,39,18],[48,31,39,6],[48,34,39,32,"screen"],[48,40,39,38],[48,41,39,39,"router"],[48,47,39,6],[49,0,40,5],[50,0,41,3],[50,5,32,2],[52,0,42,2],[52,8,42,6,"initialRouteIndex"],[52,25,42,23],[52,30,42,28],[52,31,42,29],[52,32,42,2],[52,34,42,32],[53,0,43,4],[53,12,43,10],[53,16,43,14,"Error"],[53,21,43,10],[53,22,44,6],[53,53,44,35,"initialRouteName"],[53,69,44,6],[53,102,45,28,"order"],[53,107,45,33],[53,108,45,34,"map"],[53,111,45,28],[53,112,45,38],[53,122,45,38,"n"],[53,123,45,39],[54,0,45,39],[54,22,45,47,"n"],[54,23,45,39],[55,0,45,39],[55,7,45,28],[55,9,45,53,"join"],[55,13,45,28],[55,14,45,58],[55,18,45,28],[55,19,44,6],[55,20,43,10],[55,21,43,4],[56,0,47,3],[58,0,49,2],[58,13,49,11,"resetChildRoute"],[58,28,49,2],[58,29,49,27,"routeName"],[58,38,49,2],[58,40,49,38],[59,0,50,4],[59,10,50,10,"params"],[59,16,50,16],[59,19,51,6,"routeName"],[59,28,51,15],[59,33,51,20,"initialRouteName"],[59,49,51,6],[59,52,51,39,"initialRouteParams"],[59,70,51,6],[59,73,51,60,"undefined"],[59,82,50,4],[60,0,52,4],[60,10,52,10,"childRouter"],[60,21,52,21],[60,24,52,24,"childRouters"],[60,36,52,36],[60,37,52,37,"routeName"],[60,46,52,36],[60,47,52,4],[62,0,53,4],[62,10,53,8,"childRouter"],[62,21,53,4],[62,23,53,21],[63,0,54,6],[63,12,54,12,"childAction"],[63,23,54,23],[63,26,54,26,"NavigationActions"],[63,53,54,44,"init"],[63,57,54,26],[63,59,54,6],[65,0,55,6],[65,47,56,11,"childRouter"],[65,58,56,22],[65,59,56,23,"getStateForAction"],[65,76,56,11],[65,77,56,41,"childAction"],[65,88,56,11],[65,89,55,6],[66,0,57,8,"key"],[66,10,57,8,"key"],[66,13,57,11],[66,15,57,13,"routeName"],[66,24,55,6],[67,0,58,8,"routeName"],[67,10,58,8,"routeName"],[67,19,58,17],[67,21,58,8,"routeName"],[67,30,55,6],[68,0,59,8,"params"],[68,10,59,8,"params"],[68,16,59,14],[68,18,59,8,"params"],[69,0,55,6],[70,0,61,5],[72,0,62,4],[72,13,62,11],[73,0,63,6,"key"],[73,8,63,6,"key"],[73,11,63,9],[73,13,63,11,"routeName"],[73,22,62,11],[74,0,64,6,"routeName"],[74,8,64,6,"routeName"],[74,17,64,15],[74,19,64,6,"routeName"],[74,28,62,11],[75,0,65,6,"params"],[75,8,65,6,"params"],[75,14,65,12],[75,16,65,6,"params"],[76,0,62,11],[76,7,62,4],[77,0,67,3],[79,0,69,2],[79,11,69,9],[80,0,70,4,"getInitialState"],[80,6,70,4,"getInitialState"],[80,21,69,9],[80,50,70,22],[81,0,71,6],[81,12,71,12,"routes"],[81,18,71,18],[81,21,71,21,"order"],[81,26,71,26],[81,27,71,27,"map"],[81,30,71,21],[81,31,71,31,"resetChildRoute"],[81,46,71,21],[81,47,71,6],[82,0,72,6],[82,15,72,13],[83,0,73,8,"routes"],[83,10,73,8,"routes"],[83,16,73,14],[83,18,73,8,"routes"],[83,24,72,13],[84,0,74,8,"index"],[84,10,74,8,"index"],[84,15,74,13],[84,17,74,15,"initialRouteIndex"],[84,34,72,13],[85,0,75,8,"isTransitioning"],[85,10,75,8,"isTransitioning"],[85,25,75,23],[85,27,75,25],[86,0,72,13],[86,9,72,6],[87,0,77,5],[87,7,69,9],[88,0,79,4,"getNextState"],[88,6,79,4,"getNextState"],[88,18,69,9],[88,42,79,17,"prevState"],[88,51,69,9],[88,53,79,28,"possibleNextState"],[88,70,69,9],[88,72,79,47],[89,0,80,6],[89,12,80,10,"nextState"],[89,21,80,6],[91,0,81,6],[91,12,81,10,"prevState"],[91,21,81,19],[91,22,81,20,"index"],[91,27,81,10],[91,32,81,30,"possibleNextState"],[91,49,81,47],[91,50,81,48,"index"],[91,55,81,10],[91,59,81,57,"resetOnBlur"],[91,70,81,6],[91,72,81,70],[92,0,82,8],[92,14,82,14,"prevRouteName"],[92,27,82,27],[92,30,82,30,"prevState"],[92,39,82,39],[92,40,82,40,"routes"],[92,46,82,30],[92,47,82,47,"prevState"],[92,56,82,56],[92,57,82,57,"index"],[92,62,82,30],[92,64,82,64,"routeName"],[92,73,82,8],[93,0,83,8],[93,14,83,14,"nextRoutes"],[93,24,83,24],[93,60,83,31,"possibleNextState"],[93,77,83,48],[93,78,83,49,"routes"],[93,84,83,24],[93,85,83,8],[94,0,84,8,"nextRoutes"],[94,10,84,8,"nextRoutes"],[94,20,84,18],[94,21,84,19,"prevState"],[94,30,84,28],[94,31,84,29,"index"],[94,36,84,18],[94,37,84,8],[94,40,84,38,"resetChildRoute"],[94,55,84,53],[94,56,84,54,"prevRouteName"],[94,69,84,53],[94,70,84,8],[95,0,86,8],[95,49,87,13,"possibleNextState"],[95,66,86,8],[96,0,88,10,"routes"],[96,12,88,10,"routes"],[96,18,88,16],[96,20,88,18,"nextRoutes"],[97,0,86,8],[98,0,90,7],[98,9,81,6],[98,15,90,13],[99,0,91,8,"nextState"],[99,10,91,8,"nextState"],[99,19,91,17],[99,22,91,20,"possibleNextState"],[99,39,91,8],[100,0,92,7],[102,0,94,6],[102,15,94,13,"nextState"],[102,24,94,6],[103,0,95,5],[103,7,69,9],[104,0,97,4,"getStateForAction"],[104,6,97,4,"getStateForAction"],[104,23,69,9],[104,52,97,22,"action"],[104,58,69,9],[104,60,97,30,"inputState"],[104,70,69,9],[104,72,97,42],[105,0,98,6],[105,12,98,10,"prevState"],[105,21,98,19],[105,24,98,22,"inputState"],[105,34,98,32],[105,69,98,40,"inputState"],[105,79,98,32],[105,83,98,55,"inputState"],[105,93,98,6],[106,0,99,6],[106,12,99,10,"state"],[106,17,99,15],[106,20,99,18,"inputState"],[106,30,99,28],[106,34,99,32],[106,39,99,37,"getInitialState"],[106,54,99,32],[106,56,99,6],[107,0,100,6],[107,12,100,10,"activeChildIndex"],[107,28,100,26],[107,31,100,29,"state"],[107,36,100,34],[107,37,100,35,"index"],[107,42,100,6],[109,0,102,6],[109,12,102,10,"action"],[109,18,102,16],[109,19,102,17,"type"],[109,23,102,10],[109,28,102,26,"NavigationActions"],[109,55,102,44,"INIT"],[109,59,102,6],[109,61,102,50],[110,0,102,50],[110,14,107,16,"params"],[110,20,102,50],[110,23,107,27,"action"],[110,29,102,50],[110,30,107,16,"params"],[110,36,102,50],[112,0,108,8],[112,14,108,12,"params"],[112,20,108,8],[112,22,108,20],[113,0,109,10,"state"],[113,12,109,10,"state"],[113,17,109,15],[113,18,109,16,"routes"],[113,24,109,10],[113,27,109,25,"state"],[113,32,109,30],[113,33,109,31,"routes"],[113,39,109,25],[113,40,109,38,"map"],[113,43,109,25],[113,44,109,42],[113,54,109,42,"route"],[113,59,109,47],[114,0,109,47],[114,53,110,15,"route"],[114,58,109,47],[115,0,111,12,"params"],[115,16,111,12,"params"],[115,22,111,18],[115,56,112,17,"route"],[115,61,112,22],[115,62,112,23,"params"],[115,68,111,18],[115,70,113,17,"params"],[115,76,111,18],[115,78,114,18,"route"],[115,83,114,23],[115,84,114,24,"routeName"],[115,93,114,18],[115,98,114,38,"initialRouteName"],[115,114,114,18],[115,117,115,18,"initialRouteParams"],[115,135,114,18],[115,138,116,18],[115,142,111,18],[116,0,109,47],[117,0,109,47],[117,13,109,25],[117,14,109,10],[118,0,119,9],[119,0,120,7],[121,0,123,6],[121,12,123,12,"activeChildLastState"],[121,32,123,32],[121,35,123,35,"state"],[121,40,123,40],[121,41,123,41,"routes"],[121,47,123,35],[121,48,123,48,"state"],[121,53,123,53],[121,54,123,54,"index"],[121,59,123,35],[121,60,123,6],[122,0,124,6],[122,12,124,12,"activeChildRouter"],[122,29,124,29],[122,32,124,32,"childRouters"],[122,44,124,44],[122,45,124,45,"order"],[122,50,124,50],[122,51,124,51,"state"],[122,56,124,56],[122,57,124,57,"index"],[122,62,124,50],[122,63,124,44],[122,64,124,6],[124,0,125,6],[124,12,125,10,"activeChildRouter"],[124,29,125,6],[124,31,125,29],[125,0,126,8],[125,14,126,14,"activeChildState"],[125,30,126,30],[125,33,126,33,"activeChildRouter"],[125,50,126,50],[125,51,126,51,"getStateForAction"],[125,68,126,33],[125,69,127,10,"action"],[125,75,126,33],[125,77,128,10,"activeChildLastState"],[125,97,126,33],[125,98,126,8],[127,0,130,8],[127,14,130,12],[127,15,130,13,"activeChildState"],[127,31,130,12],[127,35,130,33,"inputState"],[127,45,130,8],[127,47,130,45],[128,0,131,10],[128,19,131,17],[128,23,131,10],[129,0,132,9],[131,0,133,8],[131,14,133,12,"activeChildState"],[131,30,133,28],[131,34,133,32,"activeChildState"],[131,50,133,48],[131,55,133,53,"activeChildLastState"],[131,75,133,8],[131,77,133,75],[132,0,134,10],[132,16,134,16,"routes"],[132,23,134,22],[132,59,134,29,"state"],[132,64,134,34],[132,65,134,35,"routes"],[132,71,134,22],[132,72,134,10],[134,0,135,10,"routes"],[134,12,135,10,"routes"],[134,19,135,16],[134,20,135,17,"state"],[134,25,135,22],[134,26,135,23,"index"],[134,31,135,16],[134,32,135,10],[134,35,135,32,"activeChildState"],[134,51,135,10],[135,0,136,10],[135,19,136,17],[135,24,136,22,"getNextState"],[135,36,136,17],[135,37,136,35,"prevState"],[135,46,136,17],[135,80,137,15,"state"],[135,85,136,17],[136,0,138,12,"routes"],[136,14,138,12,"routes"],[136,20,138,18],[136,22,138,12,"routes"],[137,0,136,17],[137,15,136,10],[138,0,140,9],[139,0,141,7],[141,0,145,6],[141,12,145,10,"backBehavior"],[141,24,145,22],[141,29,145,27],[141,35,145,6],[141,37,145,35],[142,0,146,8],[142,14,146,14,"isBackEligible"],[142,28,146,28],[142,31,147,10,"action"],[142,37,147,16],[142,38,147,17,"key"],[142,41,147,10],[142,45,147,24],[142,49,147,10],[142,53,147,32,"action"],[142,59,147,38],[142,60,147,39,"key"],[142,63,147,32],[142,68,147,47,"activeChildLastState"],[142,88,147,67],[142,89,147,68,"key"],[142,92,146,8],[144,0,148,8],[144,14,148,12,"action"],[144,20,148,18],[144,21,148,19,"type"],[144,25,148,12],[144,30,148,28,"NavigationActions"],[144,57,148,46,"BACK"],[144,61,148,8],[144,63,148,52],[145,0,149,10],[145,16,149,14,"isBackEligible"],[145,30,149,28],[145,34,149,32,"shouldBackNavigateToInitialRoute"],[145,66,149,10],[145,68,149,66],[146,0,150,12,"activeChildIndex"],[146,14,150,12,"activeChildIndex"],[146,30,150,28],[146,33,150,31,"initialRouteIndex"],[146,50,150,12],[147,0,151,11],[147,13,149,10],[147,19,151,17],[148,0,152,12],[148,21,152,19,"state"],[148,26,152,12],[149,0,153,11],[150,0,154,9],[151,0,155,7],[153,0,157,6],[153,12,157,10,"didNavigate"],[153,23,157,21],[153,26,157,24],[153,31,157,6],[155,0,158,6],[155,12,158,10,"action"],[155,18,158,16],[155,19,158,17,"type"],[155,23,158,10],[155,28,158,26,"NavigationActions"],[155,55,158,44,"NAVIGATE"],[155,63,158,6],[155,65,158,54],[156,0,159,8],[156,14,159,14,"navigateAction"],[156,28,159,28],[156,31,159,31,"action"],[156,37,159,8],[157,0,160,8,"didNavigate"],[157,10,160,8,"didNavigate"],[157,21,160,19],[157,24,160,22],[157,25,160,23],[157,26,160,24,"order"],[157,31,160,29],[157,32,160,30,"find"],[157,36,160,24],[157,37,160,35],[157,47,160,36,"childId"],[157,54,160,35],[157,56,160,45,"i"],[157,57,160,35],[157,59,160,51],[158,0,161,10],[158,16,161,14,"childId"],[158,23,161,21],[158,28,161,26,"navigateAction"],[158,42,161,40],[158,43,161,41,"routeName"],[158,52,161,10],[158,54,161,52],[159,0,162,12,"activeChildIndex"],[159,14,162,12,"activeChildIndex"],[159,30,162,28],[159,33,162,31,"i"],[159,34,162,12],[160,0,163,12],[160,21,163,19],[160,25,163,12],[161,0,164,11],[163,0,165,10],[163,19,165,17],[163,24,165,10],[164,0,166,9],[164,11,160,24],[164,12,160,8],[166,0,167,8],[166,14,167,12,"didNavigate"],[166,25,167,8],[166,27,167,25],[167,0,168,10],[167,16,168,16,"childState"],[167,26,168,26],[167,29,168,29,"state"],[167,34,168,34],[167,35,168,35,"routes"],[167,41,168,29],[167,42,168,42,"activeChildIndex"],[167,58,168,29],[167,59,168,10],[168,0,169,10],[168,16,169,14,"newChildState"],[168,29,169,10],[169,0,171,10],[169,16,171,16,"childRouter"],[169,27,171,27],[169,30,171,30,"childRouters"],[169,42,171,42],[169,43,171,43,"action"],[169,49,171,49],[169,50,171,50,"routeName"],[169,59,171,42],[169,60,171,10],[171,0,173,10],[171,16,173,14,"action"],[171,22,173,20],[171,23,173,21,"action"],[171,29,173,10],[171,31,173,29],[172,0,174,12,"newChildState"],[172,14,174,12,"newChildState"],[172,27,174,25],[172,30,174,28,"childRouter"],[172,41,174,39],[172,44,175,16,"childRouter"],[172,55,175,27],[172,56,175,28,"getStateForAction"],[172,73,175,16],[172,74,175,46,"action"],[172,80,175,52],[172,81,175,53,"action"],[172,87,175,16],[172,89,175,61,"childState"],[172,99,175,16],[172,100,174,39],[172,103,176,16],[172,107,174,12],[173,0,177,11],[173,13,173,10],[173,19,177,17],[173,23,177,21],[173,24,177,22,"childRouter"],[173,35,177,21],[173,39,177,37,"action"],[173,45,177,43],[173,46,177,44,"params"],[173,52,177,17],[173,54,177,52],[174,0,178,12,"newChildState"],[174,14,178,12,"newChildState"],[174,27,178,25],[174,62,179,17,"childState"],[174,72,178,25],[175,0,180,14,"params"],[175,16,180,14,"params"],[175,22,180,20],[175,56,181,20,"childState"],[175,66,181,30],[175,67,181,31,"params"],[175,73,181,20],[175,77,181,41],[175,79,180,20],[175,81,182,19,"action"],[175,87,182,25],[175,88,182,26,"params"],[175,94,180,20],[176,0,178,25],[176,16,178,12],[177,0,185,11],[179,0,187,10],[179,16,187,14,"newChildState"],[179,29,187,27],[179,33,187,31,"newChildState"],[179,46,187,44],[179,51,187,49,"childState"],[179,61,187,10],[179,63,187,61],[180,0,188,12],[180,18,188,18,"routes"],[180,26,188,24],[180,62,188,31,"state"],[180,67,188,36],[180,68,188,37,"routes"],[180,74,188,24],[180,75,188,12],[182,0,189,12,"routes"],[182,14,189,12,"routes"],[182,22,189,18],[182,23,189,19,"activeChildIndex"],[182,39,189,18],[182,40,189,12],[182,43,189,39,"newChildState"],[182,56,189,12],[183,0,190,12],[183,21,190,19],[183,26,190,24,"getNextState"],[183,38,190,19],[183,39,190,37,"prevState"],[183,48,190,19],[183,82,191,17,"state"],[183,87,190,19],[184,0,192,14,"routes"],[184,16,192,14,"routes"],[184,22,192,20],[184,24,192,14,"routes"],[184,32,190,19],[185,0,193,14,"index"],[185,16,193,14,"index"],[185,21,193,19],[185,23,193,21,"activeChildIndex"],[186,0,190,19],[186,17,190,12],[187,0,195,11],[188,0,196,9],[189,0,197,7],[191,0,199,6],[191,12,199,10,"action"],[191,18,199,16],[191,19,199,17,"type"],[191,23,199,10],[191,28,199,26,"NavigationActions"],[191,55,199,44,"SET_PARAMS"],[191,65,199,6],[191,67,199,56],[192,0,200,8],[192,14,200,14,"key"],[192,17,200,17],[192,20,200,20,"action"],[192,26,200,26],[192,27,200,27,"key"],[192,30,200,8],[193,0,201,8],[193,14,201,14,"lastRoute"],[193,23,201,23],[193,26,201,26,"state"],[193,31,201,31],[193,32,201,32,"routes"],[193,38,201,26],[193,39,201,39,"find"],[193,43,201,26],[193,44,201,44],[193,54,201,44,"route"],[193,59,201,49],[194,0,201,49],[194,19,201,53,"route"],[194,24,201,58],[194,25,201,59,"key"],[194,28,201,53],[194,33,201,67,"key"],[194,36,201,49],[195,0,201,49],[195,11,201,26],[195,12,201,8],[197,0,202,8],[197,14,202,12,"lastRoute"],[197,23,202,8],[197,25,202,23],[198,0,203,10],[198,16,203,16,"params"],[198,23,203,22],[198,58,204,15,"lastRoute"],[198,67,204,24],[198,68,204,25,"params"],[198,74,203,22],[198,76,205,15,"action"],[198,82,205,21],[198,83,205,22,"params"],[198,89,203,22],[198,90,203,10],[200,0,207,10],[200,16,207,16,"routes"],[200,24,207,22],[200,60,207,29,"state"],[200,65,207,34],[200,66,207,35,"routes"],[200,72,207,22],[200,73,207,10],[202,0,208,10,"routes"],[202,12,208,10,"routes"],[202,20,208,16],[202,21,208,17,"state"],[202,26,208,22],[202,27,208,23,"routes"],[202,33,208,17],[202,34,208,30,"indexOf"],[202,41,208,17],[202,42,208,38,"lastRoute"],[202,51,208,17],[202,52,208,16],[202,53,208,10],[202,88,209,15,"lastRoute"],[202,97,208,10],[203,0,210,12,"params"],[203,14,210,12,"params"],[203,20,210,18],[203,22,210,12,"params"],[204,0,208,10],[205,0,212,10],[205,19,212,17],[205,24,212,22,"getNextState"],[205,36,212,17],[205,37,212,35,"prevState"],[205,46,212,17],[205,80,213,15,"state"],[205,85,212,17],[206,0,214,12,"routes"],[206,14,214,12,"routes"],[206,20,214,18],[206,22,214,12,"routes"],[207,0,212,17],[207,15,212,10],[208,0,216,9],[209,0,217,7],[211,0,219,6],[211,12,219,10,"activeChildIndex"],[211,28,219,26],[211,33,219,31,"state"],[211,38,219,36],[211,39,219,37,"index"],[211,44,219,6],[211,46,219,44],[212,0,220,8],[212,17,220,15],[212,22,220,20,"getNextState"],[212,34,220,15],[212,35,220,33,"prevState"],[212,44,220,15],[212,78,221,13,"state"],[212,83,220,15],[213,0,222,10,"index"],[213,12,222,10,"index"],[213,17,222,15],[213,19,222,17,"activeChildIndex"],[214,0,220,15],[214,13,220,8],[215,0,224,7],[215,9,219,6],[215,15,224,13],[215,19,224,17,"didNavigate"],[215,30,224,28],[215,34,224,32],[215,35,224,33,"inputState"],[215,45,224,13],[215,47,224,45],[216,0,225,8],[216,17,225,15,"state"],[216,22,225,8],[217,0,226,7],[217,9,224,13],[217,15,226,13],[217,19,226,17,"didNavigate"],[217,30,226,13],[217,32,226,30],[218,0,227,8],[218,17,227,15],[218,21,227,8],[219,0,228,7],[221,0,231,6],[221,12,231,10,"index"],[221,17,231,15],[221,20,231,18,"state"],[221,25,231,23],[221,26,231,24,"index"],[221,31,231,6],[222,0,232,6],[222,12,232,10,"routes"],[222,18,232,16],[222,21,232,19,"state"],[222,26,232,24],[222,27,232,25,"routes"],[222,33,232,6],[223,0,233,6,"order"],[223,8,233,6,"order"],[223,13,233,11],[223,14,233,12,"find"],[223,18,233,6],[223,19,233,17],[223,29,233,18,"childId"],[223,36,233,17],[223,38,233,27,"i"],[223,39,233,17],[223,41,233,33],[224,0,234,8],[224,14,234,14,"childRouter"],[224,25,234,25],[224,28,234,28,"childRouters"],[224,40,234,40],[224,41,234,41,"childId"],[224,48,234,40],[224,49,234,8],[226,0,235,8],[226,14,235,12,"i"],[226,15,235,13],[226,20,235,18,"index"],[226,25,235,8],[226,27,235,25],[227,0,236,10],[227,19,236,17],[227,24,236,10],[228,0,237,9],[230,0,238,8],[230,14,238,12,"childState"],[230,24,238,22],[230,27,238,25,"routes"],[230,33,238,31],[230,34,238,32,"i"],[230,35,238,31],[230,36,238,8],[232,0,239,8],[232,14,239,12,"childRouter"],[232,25,239,8],[232,27,239,25],[233,0,240,10,"childState"],[233,12,240,10,"childState"],[233,22,240,20],[233,25,240,23,"childRouter"],[233,36,240,34],[233,37,240,35,"getStateForAction"],[233,54,240,23],[233,55,240,53,"action"],[233,61,240,23],[233,63,240,61,"childState"],[233,73,240,23],[233,74,240,10],[234,0,241,9],[236,0,242,8],[236,14,242,12],[236,15,242,13,"childState"],[236,25,242,8],[236,27,242,25],[237,0,243,10,"index"],[237,12,243,10,"index"],[237,17,243,15],[237,20,243,18,"i"],[237,21,243,10],[238,0,244,10],[238,19,244,17],[238,23,244,10],[239,0,245,9],[241,0,246,8],[241,14,246,12,"childState"],[241,24,246,22],[241,29,246,27,"routes"],[241,35,246,33],[241,36,246,34,"i"],[241,37,246,33],[241,38,246,8],[241,40,246,38],[242,0,247,10,"routes"],[242,12,247,10,"routes"],[242,18,247,16],[242,54,247,23,"routes"],[242,60,247,16],[242,61,247,10],[243,0,248,10,"routes"],[243,12,248,10,"routes"],[243,18,248,16],[243,19,248,17,"i"],[243,20,248,16],[243,21,248,10],[243,24,248,22,"childState"],[243,34,248,10],[244,0,249,10,"index"],[244,12,249,10,"index"],[244,17,249,15],[244,20,249,18,"i"],[244,21,249,10],[245,0,250,10],[245,19,250,17],[245,23,250,10],[246,0,251,9],[248,0,252,8],[248,17,252,15],[248,22,252,8],[249,0,253,7],[249,9,233,6],[251,0,259,6],[251,12,259,10,"childrenUpdateWithoutSwitchingIndex"],[251,47,259,45],[251,48,259,46,"action"],[251,54,259,52],[251,55,259,53,"type"],[251,59,259,45],[251,60,259,6],[251,62,259,60],[252,0,260,8,"index"],[252,10,260,8,"index"],[252,15,260,13],[252,18,260,16,"state"],[252,23,260,21],[252,24,260,22,"index"],[252,29,260,8],[253,0,261,7],[255,0,263,6],[255,12,263,10,"index"],[255,17,263,15],[255,22,263,20,"state"],[255,27,263,25],[255,28,263,26,"index"],[255,33,263,10],[255,37,263,35,"routes"],[255,43,263,41],[255,48,263,46,"state"],[255,53,263,51],[255,54,263,52,"routes"],[255,60,263,6],[255,62,263,60],[256,0,264,8],[256,17,264,15],[256,22,264,20,"getNextState"],[256,34,264,15],[256,35,264,33,"prevState"],[256,44,264,15],[256,78,265,13,"state"],[256,83,264,15],[257,0,266,10,"index"],[257,12,266,10,"index"],[257,17,266,15],[257,19,266,10,"index"],[257,24,264,15],[258,0,267,10,"routes"],[258,12,267,10,"routes"],[258,18,267,16],[258,20,267,10,"routes"],[259,0,264,15],[259,13,264,8],[260,0,269,7],[262,0,270,6],[262,15,270,13,"state"],[262,20,270,6],[263,0,271,5],[263,7,69,9],[264,0,273,4,"getComponentForState"],[264,6,273,4,"getComponentForState"],[264,26,69,9],[264,58,273,25,"state"],[264,63,69,9],[264,65,273,32],[265,0,274,6],[265,12,274,12,"routeName"],[265,21,274,21],[265,24,274,24,"state"],[265,29,274,29],[265,30,274,30,"routes"],[265,36,274,24],[265,37,274,37,"state"],[265,42,274,42],[265,43,274,43,"index"],[265,48,274,24],[265,50,274,50,"routeName"],[265,59,274,6],[266,0,275,6],[266,32,276,8,"routeName"],[266,41,275,6],[266,84,277,47,"state"],[266,89,277,52],[266,90,277,53,"index"],[266,95,275,6],[267,0,280,6],[267,12,280,12,"childRouter"],[267,23,280,23],[267,26,280,26,"childRouters"],[267,38,280,38],[267,39,280,39,"routeName"],[267,48,280,38],[267,49,280,6],[269,0,281,6],[269,12,281,10,"childRouter"],[269,23,281,6],[269,25,281,23],[270,0,282,8],[270,17,282,15,"childRouter"],[270,28,282,26],[270,29,282,27,"getComponentForState"],[270,49,282,15],[270,50,282,48,"state"],[270,55,282,53],[270,56,282,54,"routes"],[270,62,282,48],[270,63,282,61,"state"],[270,68,282,66],[270,69,282,67,"index"],[270,74,282,48],[270,75,282,15],[270,76,282,8],[271,0,283,7],[273,0,284,6],[273,15,284,13],[273,51,284,35,"routeConfigs"],[273,63,284,13],[273,65,284,49,"routeName"],[273,74,284,13],[273,75,284,6],[274,0,285,5],[274,7,69,9],[275,0,287,4,"getComponentForRouteName"],[275,6,287,4,"getComponentForRouteName"],[275,30,69,9],[275,66,287,29,"routeName"],[275,75,69,9],[275,77,287,40],[276,0,288,6],[276,15,288,13],[276,51,288,35,"routeConfigs"],[276,63,288,13],[276,65,288,49,"routeName"],[276,74,288,13],[276,75,288,6],[277,0,289,5],[277,7,69,9],[278,0,291,4,"getPathAndParamsForState"],[278,6,291,4,"getPathAndParamsForState"],[278,30,69,9],[278,66,291,29,"state"],[278,71,69,9],[278,73,291,36],[279,0,292,6],[279,12,292,12,"route"],[279,17,292,17],[279,20,292,20,"state"],[279,25,292,25],[279,26,292,26,"routes"],[279,32,292,20],[279,33,292,33,"state"],[279,38,292,38],[279,39,292,39,"index"],[279,44,292,20],[279,45,292,6],[280,0,293,6],[280,12,293,12,"routeName"],[280,21,293,21],[280,24,293,24,"order"],[280,29,293,29],[280,30,293,30,"state"],[280,35,293,35],[280,36,293,36,"index"],[280,41,293,29],[280,42,293,6],[281,0,294,6],[281,12,294,12,"subPath"],[281,19,294,19],[281,22,294,22,"paths"],[281,27,294,27],[281,28,294,28,"routeName"],[281,37,294,27],[281,38,294,6],[282,0,295,6],[282,12,295,12,"screen"],[282,18,295,18],[282,21,295,21],[282,57,295,43,"routeConfigs"],[282,69,295,21],[282,71,295,57,"routeName"],[282,80,295,21],[282,81,295,6],[283,0,296,6],[283,12,296,10,"path"],[283,16,296,14],[283,19,296,17,"subPath"],[283,26,296,6],[284,0,297,6],[284,12,297,10,"params"],[284,18,297,16],[284,21,297,19,"route"],[284,26,297,24],[284,27,297,25,"params"],[284,33,297,6],[286,0,298,6],[286,12,298,10,"screen"],[286,18,298,16],[286,22,298,20,"screen"],[286,28,298,26],[286,29,298,27,"router"],[286,35,298,6],[286,37,298,35],[287,0,299,8],[287,14,299,14,"stateRoute"],[287,24,299,24],[287,27,299,27,"route"],[287,32,299,8],[288,0,302,8],[288,14,302,14,"child"],[288,19,302,19],[288,22,302,22,"screen"],[288,28,302,28],[288,29,302,29,"router"],[288,35,302,22],[288,36,302,36,"getPathAndParamsForState"],[288,60,302,22],[288,61,302,61,"stateRoute"],[288,71,302,22],[288,72,302,8],[289,0,303,8,"path"],[289,10,303,8,"path"],[289,14,303,12],[289,17,303,15,"subPath"],[289,24,303,22],[289,27,303,28,"subPath"],[289,34,303,22],[289,43,303,39,"child"],[289,48,303,44],[289,49,303,45,"path"],[289,53,303,22],[289,56,303,54,"child"],[289,61,303,59],[289,62,303,60,"path"],[289,66,303,8],[290,0,304,8,"params"],[290,10,304,8,"params"],[290,16,304,14],[290,19,304,17,"child"],[290,24,304,22],[290,25,304,23,"params"],[290,31,304,17],[290,66,304,37,"params"],[290,72,304,17],[290,74,304,48,"child"],[290,79,304,53],[290,80,304,54,"params"],[290,86,304,17],[290,90,304,65,"params"],[290,96,304,8],[291,0,305,7],[293,0,306,6],[293,15,306,13],[294,0,307,8,"path"],[294,10,307,8,"path"],[294,14,307,12],[294,16,307,8,"path"],[294,20,306,13],[295,0,308,8,"params"],[295,10,308,8,"params"],[295,16,308,14],[295,18,308,8,"params"],[296,0,306,13],[296,9,306,6],[297,0,310,5],[297,7,69,9],[298,0,317,4,"getActionForPathAndParams"],[298,6,317,4,"getActionForPathAndParams"],[298,31,69,9],[298,68,317,30,"path"],[298,72,69,9],[298,74,317,36,"params"],[298,80,69,9],[298,82,317,44],[299,0,318,6],[299,15,319,8,"order"],[299,20,319,13],[299,21,320,11,"map"],[299,24,319,8],[299,25,320,15],[299,35,320,15,"childId"],[299,42,320,22],[299,44,320,26],[300,0,321,12],[300,14,321,18,"parts"],[300,19,321,23],[300,22,321,26,"path"],[300,26,321,30],[300,27,321,31,"split"],[300,32,321,26],[300,33,321,37],[300,36,321,26],[300,37,321,12],[301,0,322,12],[301,14,322,18,"pathToTest"],[301,24,322,28],[301,27,322,31,"paths"],[301,32,322,36],[301,33,322,37,"childId"],[301,40,322,36],[301,41,322,12],[303,0,323,12],[303,14,323,16,"parts"],[303,19,323,21],[303,20,323,22],[303,21,323,21],[303,22,323,16],[303,27,323,29,"pathToTest"],[303,37,323,12],[303,39,323,41],[304,0,324,14],[304,16,324,20,"childRouter"],[304,27,324,31],[304,30,324,34,"childRouters"],[304,42,324,46],[304,43,324,47,"childId"],[304,50,324,46],[304,51,324,14],[306,0,325,14],[306,16,325,20,"action"],[306,22,325,26],[306,25,325,29,"NavigationActions"],[306,52,325,47,"navigate"],[306,60,325,29],[306,61,325,56],[307,0,326,16,"routeName"],[307,14,326,16,"routeName"],[307,23,326,25],[307,25,326,27,"childId"],[308,0,325,56],[308,13,325,29],[308,14,325,14],[310,0,328,14],[310,16,328,18,"childRouter"],[310,27,328,29],[310,31,328,33,"childRouter"],[310,42,328,44],[310,43,328,45,"getActionForPathAndParams"],[310,68,328,14],[310,70,328,72],[311,0,329,16,"action"],[311,14,329,16,"action"],[311,20,329,22],[311,21,329,23,"action"],[311,27,329,16],[311,30,329,32,"childRouter"],[311,41,329,43],[311,42,329,44,"getActionForPathAndParams"],[311,67,329,32],[311,68,330,18,"parts"],[311,73,330,23],[311,74,330,24,"slice"],[311,79,330,18],[311,80,330,30],[311,81,330,18],[311,83,330,33,"join"],[311,87,330,18],[311,88,330,38],[311,91,330,18],[311,92,329,32],[311,94,331,18,"params"],[311,100,329,32],[311,101,329,16],[312,0,333,15],[312,13,328,14],[312,19,333,21],[312,23,333,25,"params"],[312,29,333,21],[312,31,333,33],[313,0,334,16,"action"],[313,14,334,16,"action"],[313,20,334,22],[313,21,334,23,"params"],[313,27,334,16],[313,30,334,32,"params"],[313,36,334,16],[314,0,335,15],[316,0,336,14],[316,19,336,21,"action"],[316,25,336,14],[317,0,337,13],[319,0,338,12],[319,17,338,19],[319,21,338,12],[320,0,339,11],[320,9,319,8],[320,11,340,11,"find"],[320,15,319,8],[320,16,340,16],[320,26,340,16,"action"],[320,32,340,22],[321,0,340,22],[321,17,340,26],[321,18,340,27],[321,19,340,28,"action"],[321,25,340,22],[322,0,340,22],[322,9,319,8],[322,14,341,8,"order"],[322,19,341,13],[322,20,342,11,"map"],[322,23,341,8],[322,24,342,15],[322,34,342,15,"childId"],[322,41,342,22],[322,43,342,26],[323,0,343,12],[323,14,343,18,"childRouter"],[323,25,343,29],[323,28,343,32,"childRouters"],[323,40,343,44],[323,41,343,45,"childId"],[323,48,343,44],[323,49,343,12],[324,0,344,12],[324,17,345,14,"childRouter"],[324,28,345,25],[324,32,345,29,"childRouter"],[324,43,345,40],[324,44,345,41,"getActionForPathAndParams"],[324,69,345,29],[324,70,345,67,"path"],[324,74,345,29],[324,76,345,73,"params"],[324,82,345,29],[324,83,344,12],[325,0,347,11],[325,9,341,8],[325,11,348,11,"find"],[325,15,341,8],[325,16,348,16],[325,26,348,16,"action"],[325,32,348,22],[326,0,348,22],[326,17,348,26],[326,18,348,27],[326,19,348,28,"action"],[326,25,348,22],[327,0,348,22],[327,9,341,8],[327,10,319,8],[327,14,349,8],[327,18,318,6],[328,0,351,5],[328,7,69,9],[329,0,353,4,"getScreenOptions"],[329,6,353,4,"getScreenOptions"],[329,22,353,20],[329,24,353,22],[329,57,354,6,"routeConfigs"],[329,69,353,22],[329,71,355,6,"config"],[329,77,355,12],[329,78,355,13,"navigationOptions"],[329,95,353,22],[329,96,69,9],[330,0,358,4,"getScreenConfig"],[330,6,358,4,"getScreenConfig"],[330,21,358,19],[330,23,358,21,"getScreenConfigDeprecated"],[331,0,69,9],[331,5,69,2],[332,0,360,1],[332,3]]},"type":"js/module"}]}